#!/bin/sh
##############################################################
pkgbase="asciidoctor"
vers="2.0.23"
url="https://github.com/asciidoctor/asciidoctor/archive/v${vers}/asciidoctor-${vers}.tar.gz"
verify=""
digest="md5sum:e629ec9b6a82a21b4afaab7d5d495e52"
arch=`uname -m`
build=B1
src="asciidoctor-${vers}"
OPT_CONFIG=""
DOCS="CHANGELOG.adoc CODE-OF-CONDUCT.adoc CONTRIBUTING.adoc LICENSE README-de.adoc README-fr.adoc README-jp.adoc README-zh_CN.adoc README.adoc asciidoctor.gemspec docs"
patchfiles=""
# specifies files that are not in source archive and patchfiles
addfiles=""
compress=tzst
##############################################################

source /usr/share/plamobuild_functions.sh

# このスクリプトで使う1文字変数の意味
#
# $W : このスクリプトを動かすカレントディレクトリ
# $S : ソースコードのあるディレクトリ(デフォルト: $W/${src})
# $B : ビルド用ディレクトリ(デフォルト: /tmp/build)
# $P : ビルドしたファイルをインストールするディレクトリ（デフォルト: $W/work)

if [ $# -eq 0 ] ; then
  opt_download=0 ; opt_config=1 ; opt_build=1 ; opt_package=1
else
  opt_download=0 ; opt_config=0 ; opt_build=0 ; opt_package=0
  for i in $@ ; do
    case $i in
    download) opt_download=1 ;;
    config) opt_config=1 ;;
    build) opt_build=1 ;;
    package) opt_package=1 ;;
    esac
  done
fi
if [ $opt_download -eq 1 ] ; then
    download_sources
fi


if [ $opt_config -eq 1 ] ; then

    for f in $addfiles $patchfiles
    do
        if [ ! -f $f ]; then
            echo "Required file ($f) is missing."
            exit 255
        fi
    done

######################################################################
#  out of tree build. patch apply in src dir
######################################################################
    if [ -d $B ] ; then rm -rf $B ; fi ; cp -a $S $B
    cd $B
    for patch in $patchfiles ; do
        if [ ! -f .${patch} ]; then
            patch -p1 < $W/$patch
            touch .${patch}
        fi
    done
fi

if [ $opt_build -eq 1 ] ; then
    cd $B
    gem build asciidoctor.gemspec
fi

if [ $opt_package -eq 1 ] ; then
    check_root

    _gemdir="$(ruby -e 'puts Gem.default_dir')"

    if [ -d $P ] ; then rm -rf $P ; fi ; mkdir -p $P
    cd $B

    gem install --ignore-dependencies --no-user-install --verbose \
	-i "$P/$_gemdir" -n "$P/usr/bin" $pkgbase-$vers.gem

    install -Dm644 $P/$_gemdir/gems/$pkgbase-$vers/man/$pkgbase.1 \
	    $mandir/man1/$pkgbase.1

    rm -v $P/$_gemdir/cache/$pkgbase-$vers.gem
    rm -rfv $P/$_gemdir/gems/$pkgbase-$vers/man

################################
#      install tweaks
#  strip binaries, delete locale except ja, compress man,
#  install docs and patches, compress them and  chown root.root
################################
  install_tweak

#############################
#   convert symlink to null file and
#   add "ln -sf" command into install/doinst.sh
################################
  convert_links

  cd $P
  /sbin/makepkg ../$pkg.$compress <<EOF
y
1
EOF

fi
