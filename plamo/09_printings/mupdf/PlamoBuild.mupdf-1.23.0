#!/bin/sh
##############################################################
pkgbase="mupdf"
vers="1.23.0"
url="https://www.mupdf.com/downloads/archive/mupdf-${vers}-source.tar.gz"
verify=""
digest="sha256sum:de4140692e693142c311e030ac156e38ee175d7ab6c1be10c5c9ae963846164e"
arch=`uname -m`
build=B2
src="mupdf-${vers}-source"
OPT_CONFIG=""
DOCS=".readthedocs.yaml COPYING README docs"
patchfiles=""
# specifies files that are not in source archive and patchfiles
addfiles="mupdf.desktop mupdf.xpm"
compress=tzst
##############################################################

source /usr/share/plamobuild_functions.sh

# このスクリプトで使う1文字変数の意味
#
# $W : このスクリプトを動かすカレントディレクトリ
# $S : ソースコードのあるディレクトリ(デフォルト: $W/${src})
# $B : ビルド用ディレクトリ(デフォルト: /tmp/build)
# $P : ビルドしたファイルをインストールするディレクトリ（デフォルト: $W/work)

if [ $# -eq 0 ] ; then
  opt_download=0 ; opt_config=1 ; opt_build=1 ; opt_package=1
else
  opt_download=0 ; opt_config=0 ; opt_build=0 ; opt_package=0
  for i in $@ ; do
    case $i in
    download) opt_download=1 ;;
    config) opt_config=1 ;;
    build) opt_build=1 ;;
    package) opt_package=1 ;;
    esac
  done
fi
if [ $opt_download -eq 1 ] ; then
    download_sources
fi

if [ $opt_config -eq 1 ] ; then

    for f in $addfiles $patchfiles
    do
        if [ ! -f $f ]; then
            echo "Required file ($f) is missing."
            exit 255
        fi
    done

######################################################################
#  source copy build. patch apply in build dir
######################################################################
    if [ -d $B ] ; then rm -rf $B ; fi ;  cp -a $S $B  
    cd $B
    for patch in $patchfiles ; do
       patch -p1 < $W/$patch
    done

    sed -i '/MU.*_EXE. :/{
        s/\(.(MUPDF_LIB)\)\(.*\)$/\2 | \1/
        N
        s/$/ -lmupdf -L$(OUT)/
        }' Makefile

    cat > user.make <<EOF
USE_SYSTEM_FREETYPE := yes
USE_SYSTEM_HARFBUZZ := yes
USE_SYSTEM_JBIG2DEC := no
USE_SYSTEM_JPEGXR := no # not used without HAVE_JPEGXR
USE_SYSTEM_LCMS2 := no # need lcms2-art fork
USE_SYSTEM_LIBJPEG := yes
USE_SYSTEM_MUJS := no # build needs source anyway
USE_SYSTEM_OPENJPEG := yes
USE_SYSTEM_ZLIB := yes
USE_SYSTEM_GLUT := no # need freeglut2-art fork
USE_SYSTEM_CURL := yes
USE_SYSTEM_GUMBO := no
EOF

fi

if [ $opt_build -eq 1 ] ; then
    cd $B 
    CFLAGS+=' -fPIC -ffat-lto-objects'
    CXXFLAGS+=' -fPIC'

    export CFLAGS CXXFLAGS
    
    make build=release shared=yes
    
    if [ $? != 0 ]; then
        echo "build error. $0 script stop"
        exit 255
    fi
fi

if [ $opt_package -eq 1 ] ; then
  check_root
  if [ -d $P ] ; then rm -rf $P ; fi ; mkdir -p $P
  cd $B

  make prefix=$P/usr shared=yes docdir=$P/usr/share/doc/mupdf-${vers}-source install
  chmod 755 $P/usr/lib/libmupdf.so
  ( cd $P/usr/bin && ln -sfv mupdf-x11 mupdf )

  install -Dm644 -v $W/mupdf.desktop $P/usr/share/applications/mupdf.desktop
  install -Dm644 -v $W/mupdf.xpm $P/usr/share/pixmaps/mupdf.xpm

################################
#      install tweaks
#  strip binaries, delete locale except ja, compress man,
#  install docs and patches, compress them and  chown root.root
################################
  install_tweak
  ( cd $docdir && mv -v $src $pkgbase-$vers )

#############################
#   convert symlink to null file and
#   add "ln -sf" command into install/doinst.sh
################################
  convert_links


  cd $P
  /sbin/makepkg ../$pkg.$compress <<EOF
y
1
EOF

fi
