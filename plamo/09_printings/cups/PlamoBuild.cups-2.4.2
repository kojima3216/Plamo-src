#!/bin/sh
##############################################################
pkgbase="cups"
vers="2.4.2"
url="https://github.com/OpenPrinting/cups/releases/download/v${vers}/cups-${vers}-source.tar.gz"
verify=""
digest=""
arch=`uname -m`
build=B1
src="cups-${vers}"
OPT_CONFIG="--disable-static --enable-shared --without-systemd --without-ondemand --with-rcdir=/tmp/cupsinitl"
DOCS="INSTALL.md LICENSE README.md"
patchfiles="cups-2.4.0-statedir.patch 0001_Fix_OpenSSL_crash_bug.patch"
# specifies files that are not in source archive and patchfiles
addfiles=""
compress=txz
##############################################################

source /usr/share/plamobuild_functions.sh

# このスクリプトで使う1文字変数の意味
#
# $W : このスクリプトを動かすカレントディレクトリ
# $S : ソースコードのあるディレクトリ(デフォルト: $W/${src})
# $B : ビルド用ディレクトリ(デフォルト: /tmp/build)
# $P : ビルドしたファイルをインストールするディレクトリ（デフォルト: $W/work)

if [ $# -eq 0 ] ; then
  opt_download=0 ; opt_config=1 ; opt_build=1 ; opt_package=1
else
  opt_download=0 ; opt_config=0 ; opt_build=0 ; opt_package=0
  for i in $@ ; do
    case $i in
    download) opt_download=1 ;;
    config) opt_config=1 ;;
    build) opt_build=1 ;;
    package) opt_package=1 ;;
    esac
  done
fi
if [ $opt_download -eq 1 ] ; then
    download_sources
fi


if [ $opt_config -eq 1 ] ; then

    for f in $addfiles $patchfiles
    do
        if [ ! -f $f ]; then
            echo "Required file ($f) is missing."
            exit 255
        fi
    done

######################################################################
#  copy source build. patch apply in build dir
######################################################################
    if [ -d $B ] ; then rm -rf $B ; fi ; cp -a $S $B 
    cd $B

    sed -e "s/format-truncation//" \
        -i configure \
        config-scripts/cups-compiler.m4

    for patch in $patchfiles ; do
        if [ ! -f .${patch} ]; then
            patch -p1 < $W/$patch
            touch .${patch}
        fi
    done

    export PKG_CONFIG_PATH=/usr/${libdir}/pkgconfig:/usr/share/pkgconfig
    export LDFLAGS='-Wl,--as-needed' 
    $S/configure --prefix=/usr --libdir=/usr/${libdir} --sysconfdir=/etc --localstatedir=/var --mandir=/usr/share/man ${OPT_CONFIG}
    if [ $? != 0 ]; then
        echo "configure error. $0 script stop"
        exit 255
    fi
fi

if [ $opt_build -eq 1 ] ; then
    cd $B 
    export LDFLAGS='-Wl,--as-needed'
    make
    if [ $? != 0 ]; then
        echo "build error. $0 script stop"
        exit 255
    fi
fi

if [ $opt_package -eq 1 ] ; then
  check_root
  if [ -d $P ] ; then rm -rf $P ; fi ; mkdir -p $P
  cd $B

  export LDFLAGS='-Wl,--as-needed'
  make install DESTDIR=$P

  rm -vrf $P/var/run
  rm -vrf $P/run

  # use BLFS's init script
  rm -vrf $P/tmp  
  mkdir -p $P/etc/rc.d/init.d
  cat <<"EOF" > $P/etc/rc.d/init.d/cups
#!/bin/sh
########################################################################
# Begin cups
#
# Description : Start cups daemon
#
# Author      : Bruce Dubbs - bdubbs@linuxfromscratch.org
#
# Version     : LFS 7.0
#
########################################################################

### BEGIN INIT INFO
# Provides:            cups
# Required-Start:      $network
# Should-Start:        $remote_fs haldaemon
# Required-Stop:       $network
# Should-Stop:         haldaemon $remote_fs
# Default-Start:       3 4 5
# Default-Stop:        0 1 2 6
# Short-Description:   Starts cups print daemon.
# Description:         Starts cups print daemon.
# X-LFS-Provided-By:   BLFS / LFS 7.0
### END INIT INFO

. /lib/lsb/init-functions

#$LastChangedBy: dj $
#$Date: 2011-12-05 01:38:40 -0600 (Mon, 05 Dec 2011) $

case $1 in
   start)
      log_info_msg "Starting CUPS Printserver..."
      start_daemon /usr/sbin/cupsd
      evaluate_retval
      ;;

   stop)
      log_info_msg "Stopping CUPS Printserver..."
      killproc /usr/sbin/cupsd
      evaluate_retval
      ;;

   reload)
      log_info_msg "Reloading CUPS Printserver..."
      killproc /usr/sbin/cupsd -HUP
      evaluate_retval
      ;;

   restart)
      $0 stop
      sleep 1
      $0 start
      ;;

   status)
      statusproc /usr/sbin/cupsd
      ;;

   *)
      echo "Usage: $0 {start|stop|reload|restart|status}"
      exit 1
      ;;
esac

# End /etc/init.d/cups
EOF
  chmod +x $P/etc/rc.d/init.d/cups
  mkdir -pv $P/etc/rc.d/rc{0,1,2,3,4,5,6}.d
  ( cd $P/etc/rc.d/rc0.d ; ln -sf  ../init.d/cups K00cups )
  ( cd $P/etc/rc.d/rc1.d ; ln -sf  ../init.d/cups K00cups )
  ( cd $P/etc/rc.d/rc2.d ; ln -sf  ../init.d/cups S25cups )
  ( cd $P/etc/rc.d/rc3.d ; ln -sf  ../init.d/cups S25cups )
  ( cd $P/etc/rc.d/rc4.d ; ln -sf  ../init.d/cups S25cups )
  ( cd $P/etc/rc.d/rc5.d ; ln -sf  ../init.d/cups S25cups )
  ( cd $P/etc/rc.d/rc6.d ; ln -sf  ../init.d/cups K00cups )

  echo "ServerName /var/run/cups/cups.sock" > $P/etc/cups/client.conf

  # put Japanese pages in /usr/share/cups/templates
  mkdir -v $P/usr/share/cups/templates/C
  ( cd $P/usr/share/cups/templates ; mv -v *.tmpl C/ )
  ( cd $P/usr/share/cups/templates ; cp -v ja/*.tmpl . )
  # put Japanese pages in /usr/share/doc/cups
  mkdir -v $P/usr/share/doc/cups/C
  ( cd $P/usr/share/doc/cups ; mv -v index.html C/ )
  ( cd $P/usr/share/doc/cups ; cp -v ja/index.html . )
  
################################
#      install tweaks
#  strip binaries, delete locale except ja, compress man,
#  install docs and patches, compress them and  chown root.root
################################
  install_tweak

#############################
#   convert symlink to null file and
#   add "ln -sf" command into install/doinst.sh
################################
  convert_links

  cd $P
  /sbin/makepkg ../$pkg.$compress <<EOF
y
1
EOF

fi
