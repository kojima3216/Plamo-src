#!/bin/sh
##############################################################
pkgbase='git'
vers="2.39.1"
url="https://www.kernel.org/pub/software/scm/${pkgbase}/${pkgbase}-${vers}.tar.xz"
verify="https://www.kernel.org/pub/software/scm/${pkgbase}/${pkgbase}-${vers}.tar.sign"
man_url="https://www.kernel.org/pub/software/scm/git/git-manpages-${vers}.tar.xz"
arch=`uname -m`
build=B1
src="${pkgbase}-${vers}"
OPT_CONFIG='--with-gitconfig=/etc/gitconfig --without-tcltk --without-python'
DOCS='COPYING INSTALL README.md command-list.txt'
patchfiles=''
addfiles="git-set-file-times"
compress=tzst
##############################################################

source /usr/share/plamobuild_functions.sh

# このスクリプトで使う1文字変数の意味
#
# $W : このスクリプトを動かすカレントディレクトリ
# $S : ソースコードのあるディレクトリ(デフォルト: $W/${src})
# $B : ビルド用ディレクトリ(デフォルト: /tmp/build{,32})
# $P : ビルドしたファイルをインストールするディレクトリ（デフォルト: $W/work)


if [ $# -eq 0 ] ; then
  opt_download=0 ; opt_config=1 ; opt_build=1 ; opt_package=1
else
  opt_download=0 ; opt_config=0 ; opt_build=0 ; opt_package=0
  for i in $@ ; do
    case $i in
    download) opt_download=1 ;;
    config) opt_config=1 ;;
    build) opt_build=1 ;;
    package) opt_package=1 ;;
    esac
  done
fi
if [ $opt_download -eq 1 ] ; then
  download_sources
  if [ ! -f ${man_url##*/} ]; then
    wget $man_url
  fi
fi

if [ $opt_config -eq 1 ] ; then
  for f in $addfiles $patchfiles
  do
    if [ ! -f $f ]; then
      echo "Required file ($f) is missing."
      exit 255
    fi
  done

  if [ -d $B ] ; then rm -rf $B ; fi ; cp -a $S $B
######################################################################
#  don't copy sources, so need patch in the src dir
######################################################################
  cd $B
  for patch in $patchfiles ; do
    patch -p1 < $W/$patch
  done
  # if [ -f autogen.sh ] ; then
  #   sh ./autogen.sh
  # fi

  export PKG_CONFIG_PATH=/usr/${libdir}/pkgconfig:/usr/share/pkgconfig:/opt/kde/${libdir}/pkgconfig
  export LDFLAGS='-Wl,--as-needed' 
  ./configure --prefix=/usr --sysconfdir=/etc --localstatedir=/var --mandir='${prefix}'/share/man ${OPT_CONFIG[$i]}

  if [ $? != 0 ]; then
    echo "configure error. $0 script stop"
    exit 255
  fi
fi

if [ $opt_build -eq 1 ] ; then
  cd $B
  export LDFLAGS='-Wl,--as-needed'
  make -j3 perllibdir=$(/usr/bin/perl -MConfig -wle 'print $Config{installvendorlib}')
  if [ $? != 0 ]; then
    echo "build error. $0 script stop"
    exit 255
  fi
  make -C contrib/subtree prefix=/usr perllibdir=$(/usr/bin/perl -MConfig -wle 'print $Config{installvendorlib}') all man
  make -C contrib/diff-highlight prefix=/usr perllibdir=$(/usr/bin/perl -MConfig -wle 'print $Config{installvendorlib}')
fi

if [ $opt_package -eq 1 ] ; then
  check_root
  if [ -d $P ] ; then rm -rf $P ; fi ; mkdir -p $P
  cd $B
  export LDFLAGS='-Wl,--as-needed'

  make install DESTDIR=$P perllibdir=$(/usr/bin/perl -MConfig -wle 'print $Config{installvendorlib}')
  make -C contrib/subtree prefix=/usr perllibdir=$(/usr/bin/perl -MConfig -wle 'print $Config{installvendorlib}') DESTDIR=$P install install-man
  cp -v contrib/diff-highlight/diff-highlight $P/usr/libexec/git-core/

  # set-file-times
  install -v -m 755 $W/git-set-file-times $P/usr/libexec/git-core/git-set-file-times
  install -v -D -m 755 $W/git-set-file-times $docdir/$src/git-set-file-times

  # install man pages
  install -v -d $P/usr/share/man
  tar xf $W/${man_url##*/} -C $P/usr/share/man --no-same-owner --no-overwrite-dir

  # remove /usr/lib/perl5
  rm -rfv $P/usr/lib

################################
#      install tweaks
#  strip binaries, delete locale except ja, compress man, 
#  install docs and patches, compress them and  chown root.root
################################
  install_tweak

#############################
#   convert symlink to null file and 
#   add "ln -sf" command into install/doinst.sh
################################
  convert_links

  cd $P
  /sbin/makepkg ../$pkg.$compress <<EOF
y
1
EOF

fi
