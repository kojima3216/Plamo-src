#!/bin/sh
##############################################################
pkgbase='python_pip'
vers="18.1"
url="https://github.com/pypa/pip/archive/${vers}.tar.gz"
digest=""
verify=""
arch=noarch
build=B2
src="pip-${vers}"
OPT_CONFIG=''
DOCS='AUTHORS.txt CHANGES.txt LICENSE.txt README.rst'
patchfiles=''
compress=txz
##############################################################

source /usr/share/plamobuild_functions.sh

# このスクリプトで使う1文字変数の意味
#
# $W : このスクリプトを動かすカレントディレクトリ
# $S : ソースコードのあるディレクトリ(デフォルト: $W/${src})
# $B : ビルド用ディレクトリ(デフォルト: /tmp/build{,32})
# $P : ビルドしたファイルをインストールするディレクトリ（デフォルト: $W/work)


if [ $# -eq 0 ] ; then
  opt_download=0 ; opt_config=1 ; opt_build=1 ; opt_package=1
else
  opt_download=0 ; opt_config=0 ; opt_build=0 ; opt_package=0
  for i in $@ ; do
    case $i in
    download) opt_download=1 ;;
    config) opt_config=1 ;;
    build) opt_build=1 ;;
    package) opt_package=1 ;;
    esac
  done
fi
if [ $opt_download -eq 1 ] ; then
  download_sources
fi

if [ $opt_config -eq 1 ] ; then
  if [ -d $B ] ; then rm -rf $B ; fi
  for i in 2 3
  do
    echo "==== configure for python${i} ===="
    mkdir -p $B/${i}
    cp -a $S/* $B/${i}/

######################################################################
#  copy srcs to build directory, patch and config in build dir
######################################################################
    cd $B/$i

    for patch in $patchfiles ; do
      patch -p1 < $W/$patch
    done
  done
fi

if [ $opt_build -eq 1 ] ; then
  for i in 2 3
  do
    echo "=== build for python${i} ==="
    cd $B/$i
    python${i} setup.py build
    if [ $? != 0 ]; then
      echo "build error for python${i}. $0 script stop"
      exit 255
    fi
  done
fi

if [ $opt_package -eq 1 ] ; then
  check_root
  for i in 2 3
  do
    P=$W/work/$i
    docdir=$P/usr/share/doc
    pkg=python${i}_pip-${vers}-${arch}-${build}
    if [ $i = 2 ]; then
        pythonlib=$P/usr/lib/python2.7
    else
        pythonlib=$P/usr/lib/python3.6
    fi
    if [ -d $P ] ; then rm -rf $P ; fi ; mkdir -p $P
    cd $B/$i
    python${i} setup.py install --prefix=/usr --root $P

    if [ $i = 2 ]; then
        rm -vf $P/usr/bin/pip
        sed -i "s|#!/usr/bin/env python$|#!/usr/bin/env python${i}|" \
            $pythonlib/site-packages/pip/__init__.py
        python${i} -m compileall $P/usr/${libdir}/${pythonlib}/site-packages/pip/__init__.py
    fi

    ## We don't have bash-completion package
    #install -dm755 "$P"/usr/share/bash-completion/completions
    #PYTHONPATH=$pythonlib/site-packages "$P"/usr/bin/pip${i} completion --bash > "$P"/usr/share/bash-completion/completions/pip${i}
    #sed -i "s/pip/pip${i}/g" "$P"/usr/share/bash-completion/completions/pip${i}

################################
#      install tweaks
#  strip binaries, delete locale except ja, compress man, 
#  install docs and patches, compress them and  chown root.root
################################
    install_tweak

#############################
#   convert symlink to null file and 
#   add "ln -sf" command into install/doinst.sh
################################
    convert_links

    cd $P
    /sbin/makepkg ../../$pkg.$compress <<EOF
y
1
EOF
  done

fi
