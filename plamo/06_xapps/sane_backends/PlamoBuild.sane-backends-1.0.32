#!/bin/sh
##############################################################
pkgbase="sane_backends"
vers="1.0.32"
url="https://gitlab.com/sane-project/backends/-/archive/${vers}/backends-${vers}.tar.bz2"
verify=""
digest=""
arch=`uname -m`
build=B2
src="sane-backends-${vers}"
OPT_CONFIG="--disable-static --enable-shared
    --sbindir=/usr/bin
    --disable-locking
    --disable-rpath
    --enable-pthread
    --with-avahi
    --with-libcurl
    --with-pic
    --with-poppler-glib
    --with-usb"
DOCS="AUTHORS COPYING ChangeLog ChangeLogs INSTALL.linux LICENSE NEWS PROBLEMS PROJECTS README README.aix README.beos README.darwin README.djpeg README.freebsd README.hp-ux README.linux README.netbsd README.openbsd README.os2 README.solaris README.unixware2 README.unixware7 README.windows README.zeta doc"
patchfiles=""
# specifies files that are not in source archive and patchfiles
addfiles=""
compress=txz
##############################################################

source /usr/share/plamobuild_functions.sh

# このスクリプトで使う1文字変数の意味
#
# $W : このスクリプトを動かすカレントディレクトリ
# $S : ソースコードのあるディレクトリ(デフォルト: $W/${src})
# $B : ビルド用ディレクトリ(デフォルト: /tmp/build)
# $P : ビルドしたファイルをインストールするディレクトリ（デフォルト: $W/work)

if [ $# -eq 0 ] ; then
  opt_download=0 ; opt_config=1 ; opt_build=1 ; opt_package=1
else
  opt_download=0 ; opt_config=0 ; opt_build=0 ; opt_package=0
  for i in $@ ; do
    case $i in
    download) opt_download=1 ;;
    config) opt_config=1 ;;
    build) opt_build=1 ;;
    package) opt_package=1 ;;
    esac
  done
fi
if [ $opt_download -eq 1 ] ; then
    download_sources
fi

if [ $opt_config -eq 1 ] ; then

    for f in $addfiles $patchfiles
    do
        if [ ! -f $f ]; then
            echo "Required file ($f) is missing."
            exit 255
        fi
    done

    # rename "backends-${vers}" as "sane-backends-${vers}
    if [ ! -d $src ]; then
	mv "backends-${vers}" $src
    fi
    
######################################################################
#  source copy build. patch apply in build dir
######################################################################
    if [ -d $B ] ; then rm -rf $B ; fi ;  cp -a $S $B  
    cd $B
    for patch in $patchfiles ; do
       patch -p1 < $W/$patch
    done

    echo "$vers" > .tarball-version
    echo "$vers" > .version
    autoreconf -fiv
    
    # if [ -f autogen.sh ] ; then
    #    sh ./autogen.sh
    # fi

    export PKG_CONFIG_PATH=/usr/${libdir}/pkgconfig:/usr/share/pkgconfig
    export LDFLAGS='-Wl,--as-needed' 
    ./configure --prefix=/usr --libdir=/usr/${libdir} --sysconfdir=/etc --localstatedir=/var --mandir=/usr/share/man  --docdir=/usr/share/doc/${src} ${OPT_CONFIG}
    if [ $? != 0 ]; then
        echo "configure error. $0 script stop"
        exit 255
    fi
    # circumvent overlinking in libraries
    sed -e 's/ -shared / -Wl,-O1,--as-needed\0/g'  -i libtool
fi

if [ $opt_build -eq 1 ] ; then
    cd $B 
    export LDFLAGS='-Wl,--as-needed'
    make  -j4
    if [ $? != 0 ]; then
        echo "build error. $0 script stop"
        exit 255
    fi
fi

if [ $opt_package -eq 1 ] ; then
  check_root
  if [ -d $P ] ; then rm -rf $P ; fi ; mkdir -p $P
  cd $B

  export LDFLAGS='-Wl,--as-needed'
  make install DESTDIR=$P

  
  # generate udev udev+hwdb (from Arch scripts)
  pkgdir=$P
  pkgname='sane'
  install -vdm 755 "${pkgdir}/lib/udev/rules.d/"
  tools/sane-desc -m udev+hwdb -s doc/descriptions/ > "${pkgdir}/lib/udev/rules.d/65-${pkgname}.rules"
  tools/sane-desc -m udev+hwdb -s doc/descriptions-external/ >> "${pkgdir}/lib/udev/rules.d/65-${pkgname}.rules"
  # generate udev hwdb
  install -vdm 755 "${pkgdir}/lib/udev/hwdb.d/"
  tools/sane-desc -m hwdb -s doc/descriptions/ > "${pkgdir}/lib/udev/hwdb.d/20-${pkgname}.hwdb"
  # NOTE: an empty new line is required between the two .desc collections
  printf "\n" >> "${pkgdir}/lib/udev/hwdb.d/20-${pkgname}.hwdb"
  tools/sane-desc -m hwdb -s doc/descriptions-external/ >> "${pkgdir}/lib/udev/hwdb.d/20-${pkgname}.hwdb"

  
################################
#      install tweaks
#  strip binaries, delete locale except ja, compress man,
#  install docs and patches, compress them and  chown root.root
################################
  install_tweak

#############################
#   convert symlink to null file and
#   add "ln -sf" command into install/doinst.sh
################################
  convert_links

  cd $P
  /sbin/makepkg ../$pkg.$compress <<EOF
y
1
EOF

fi
