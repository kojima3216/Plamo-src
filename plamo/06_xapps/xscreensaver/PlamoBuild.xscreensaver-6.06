#!/bin/sh
##############################################################
pkgbase='xscreensaver'
vers='6.06'
url="http://www.jwz.org/${pkgbase}/${pkgbase}-${vers}.tar.gz"
digest="md5sum:7e9437089cc8162a3cf9ff335633faed"
verify=""
arch=`uname -m`
build=B1
src="${pkgbase}-${vers}"
OPT_CONFIG='--with-elogind --with-gtk --datadir=/usr/share --localedir=/usr/share/locale'
DOCS='INSTALL README README.VMS README.hacking'
addfiles="xscreensaver.pam"
patchfiles="0003-xscreensaver-6.05_driver_xscreensaver.ui.patch"
compress=tzst
##############################################################

source /usr/share/plamobuild_functions.sh

# このスクリプトで使う1文字変数の意味
#
# $W : このスクリプトを動かすカレントディレクトリ
# $S : ソースコードのあるディレクトリ(デフォルト: $W/${src})
# $B : ビルド用ディレクトリ(デフォルト: /tmp/build{,32})
# $P : ビルドしたファイルをインストールするディレクトリ（デフォルト: $W/work)


if [ $# -eq 0 ] ; then
  opt_download=0 ; opt_config=1 ; opt_build=1 ; opt_package=1
else
  opt_download=0 ; opt_config=0 ; opt_build=0 ; opt_package=0
  for i in $@ ; do
    case $i in
    download) opt_download=1 ;;
    config) opt_config=1 ;;
    build) opt_build=1 ;;
    package) opt_package=1 ;;
    esac
  done
fi
if [ $opt_download -eq 1 ] ; then
  download_sources
fi

if [ $opt_config -eq 1 ] ; then

  for f in $addfiles $patchfiles
  do
    if [ ! -f $f ]; then
      echo "Required file ($f) is missing."
      exit 255
    fi
  done

  if [ -d $B ] ; then rm -rf $B ; fi ; cp -a $S $B
######################################################################
#  don't copy sources, so need patch in the src dir
######################################################################
  cd $B
  for patch in $patchfiles ; do
      patch -p1 < $W/$patch
  done

  sed -i 's/-lsystemd/-lelogind/' driver/Makefile.in

  # Generate POT file for translators
  cd po && intltool-update --verbose -p && cd ..

  # prepare po
  # Fix man pages header:
  find hacks -name '*.man' -print0 | xargs -0 sed -ie 's/TH XScreenSaver 1/TH XScreenSaver 6/'
  # Modify hack list to fit our needs:
  # Modify hack list to fit our needs:
  sed -re '
  s/^([[:space:]]*(rorschach|greynetic|noseguy|deco|moire|spiral|laser|sierpinski|flag|sphere|mountain|triangle|worm|xlyap|cynosure|bsod|t3d|wander"Wander|critical|phosphor|blaster|nerverot|"SpeedMine"|poluominoes|fluidballs|barcode|bubbles))/-\1/;
  s/^-([[:space:]]*(juggle))/\1/;
  s/^@GL_KLUDGE@([[:space:]]*GL:[[:space:]]*(sproingies|"Molecule \(lumpy\)"|circuit|atunnel|glmatrix|stairs|pulsar|starwars|"GLText|boxed|"GLForestFire"|sballs|cubenetic|queens|endgame))/-\1/;
  s/^-([[:space:]]*GL:[[:space:]]*(fireflies))/\1/;
  /.*vidwhacker -stdin -stdout/D;
  ' driver/XScreenSaver.ad.in > driver/XScreenSaver.ad.in.tmp && mv -f driver/XScreenSaver.ad.in.tmp driver/XScreenSaver.ad.in
  intltoolize --copy --force

  chmod +x install-sh

  autoreconf -fi

  export PKG_CONFIG_PATH=/usr/${libdir}/pkgconfig:/usr/share/pkgconfig:/opt/kde/${libdir}/pkgconfig
  export LDFLAGS='-Wl,--as-needed' 
  ./configure --prefix=/usr --sysconfdir=/etc --localstatedir=/var --mandir='${prefix}'/share/man ${OPT_CONFIG}
    
  if [ $? != 0 ]; then
    echo "configure error. $0 script stop"
    exit 255
  fi
fi
    
if [ $opt_build -eq 1 ] ; then
  cd $B
  # Fix xscreensaver po Makefile
  sed -i "s|@install_sh@|../install-sh -c|" po/Makefile

  export LDFLAGS='-Wl,--as-needed'
  make all
  if [ $? != 0 ]; then
    echo "build error. $0 script stop"
    exit 255
  fi
fi

if [ $opt_package -eq 1 ] ; then
  check_root
  if [ -d $P ] ; then rm -rf $P ; fi ; mkdir -p $P
  cd $B
  export LDFLAGS='-Wl,--as-needed'
  make install install_prefix=$P
  cd po
  make install-data DESTDIR=$P
  cd ..

  install -v -Dm644 $W/xscreensaver.pam $P/etc/pam.d/xscreensaver
  install -v -Dm644 $W/xscreensaver.pam $docdir/$src/xscreensaver.pam

################################
#      install tweaks
#  strip binaries, delete locale except ja, compress man, 
#  install docs and patches, compress them and  chown root.root
################################
  install_tweak

#############################
#   convert symlink to null file and 
#   add "ln -sf" command into install/doinst.sh
################################
  convert_links

  cd $P
  /sbin/makepkg ../$pkg.$compress <<EOF
y
1
EOF

fi
