#!/bin/sh
##############################################################
pkgbase='rsyslog'
vers='8.2204.1'
url="https://www.rsyslog.com/files/download/rsyslog/rsyslog-${vers}.tar.gz"
digest="sha256sum:a6d731e46ad3d64f6ad4b19bbf1bf56ca4760a44a24bb96823189dc2e71f7028"
arch=`uname -m`
build=B1
src="${pkgbase}-${vers}"
OPT_CONFIG="--sbindir=/sbin
	--enable-mail
	--enable-imfile
	--enable-imptcp"
DOCS='AUTHORS COPYING COPYING.ASL20 COPYING.LESSER ChangeLog INSTALL NEWS README README.md'
patchfiles=''
addfiles="rsyslog.conf rsyslog.logrotate rsyslogd.init"
compress=tzst
##############################################################

source /usr/share/plamobuild_functions.sh

# このスクリプトで使う1文字変数の意味
# 
# $W : このスクリプトを動かすカレントディレクトリ
# $S : ソースコードのあるディレクトリ(デフォルト: $W/${src})
# $B : ビルド用ディレクトリ(デフォルト: /tmp/build{,32})
# $P : ビルドしたファイルをインストールするディレクトリ（デフォルト: $W/work)


if [ $# -eq 0 ] ; then
  opt_download=0 ; opt_config=1 ; opt_build=1 ; opt_package=1
else
  opt_download=0 ; opt_config=0 ; opt_build=0 ; opt_package=0
  for i in $@ ; do
    case $i in
    download) opt_download=1 ;;
    config) opt_config=1 ;;
    build) opt_build=1 ;;
    package) opt_package=1 ;;
    esac
  done
fi
if [ $opt_download -eq 1 ] ; then
    download_sources
fi

if [ $opt_config -eq 1 ] ; then
    for f in $addfiles $patchfiles
    do
        if [ ! -f $f ]; then
            echo "Required file ($f) is missing."
            exit 255
        fi
    done

    if [ -d $B ] ; then rm -rf $B ; fi ; mkdir -p $B 
######################################################################
#  don't copy sources, so need patch in the src dir
######################################################################
    cd $S
    for patch in $patchfiles ; do
        if [ ! -f .${patch} ]; then
            patch -p1 < $W/$patch
            touch .${patch}
        fi
    done

    cd $B
    # if [ -f $S/autogen.sh ] ; then
    #   sh ./autogen.sh
    # fi
    export PKG_CONFIG_PATH=/usr/${libdir}/pkgconfig:/usr/share/pkgconfig:/opt/kde/${libdir}/pkgconfig
    export LDFLAGS='-Wl,--as-needed' 
    $S/configure --prefix=/usr --sysconfdir=/etc --localstatedir=/var --mandir='${prefix}'/share/man ${OPT_CONFIG[$i]}
    
    if [ $? != 0 ]; then
	echo "configure error. $0 script stop"
	exit 255
    fi
fi
    
if [ $opt_build -eq 1 ] ; then
    cd $B
    export LDFLAGS='-Wl,--as-needed'
    make -j3
    if [ $? != 0 ]; then
	echo "build error. $0 script stop"
	exit 255
    fi
fi

if [ $opt_package -eq 1 ] ; then
  check_root
  if [ -d $P ] ; then rm -rf $P ; fi ; mkdir -p $P
  cd $B
  export LDFLAGS='-Wl,--as-needed'
  make install DESTDIR=$P

  install -v -d $P/etc/rsyslog.d
  install -v -m644 $W/rsyslog.conf $P/etc/rsyslog.conf.dist
  install -v -D -m644 $W/rsyslog.logrotate $P/etc/logrotate.d/rsyslog
  install -v -D -m755 $W/rsyslogd.init $P/etc/rc.d/init.d/rsyslogd

  for f in rsyslog.conf rsyslog.logrotate rsyslogd.init
  do
      install -Dm644 -v $W/$f $docdir/$src/$f
  done

  runlevels="0 1 2 3 4 5 6"
  for r in $runlevels
  do
    install -d -v $P/etc/rc.d/rc"$r".d
  done

  ln -sfv ../init.d/rsyslogd $P/etc/rc.d/rc0.d/K90rsyslogd
  ln -sfv ../init.d/rsyslogd $P/etc/rc.d/rc1.d/K90rsyslogd
  ln -sfv ../init.d/rsyslogd $P/etc/rc.d/rc2.d/K90rsyslogd
  ln -sfv ../init.d/rsyslogd $P/etc/rc.d/rc3.d/S10rsyslogd
  ln -sfv ../init.d/rsyslogd $P/etc/rc.d/rc4.d/S10rsyslogd
  ln -sfv ../init.d/rsyslogd $P/etc/rc.d/rc5.d/S10rsyslogd
  ln -sfv ../init.d/rsyslogd $P/etc/rc.d/rc6.d/K90rsyslogd

  for f in rsyslog.conf rsyslog.logrotate rsyslogd.init
  do
    install -v -D -m 644 $W/"$f" $docdir/$src/"$f"
  done

  mkdir -p $P/install
  cat <<EOF >> $P/install/initpkg
if [ ! -f /etc/rsyslog.conf ]; then
  ( cd /etc ; cp rsyslog.conf.dist rsyslog.conf )
fi
EOF

################################
#      install tweaks
#  strip binaries, delete locale except ja, compress man, 
#  install docs and patches, compress them and  chown root.root
################################
  install_tweak

#############################
#   convert symlink to null file and 
#   add "ln -sf" command into install/doinst.sh
################################
  convert_links

  cd $P
  /sbin/makepkg ../$pkg.$compress <<EOF
y
1
EOF

fi
