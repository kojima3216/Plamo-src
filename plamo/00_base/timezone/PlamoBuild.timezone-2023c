#!/bin/sh
##############################################################
pkgbase="timezone"
vers="2023c"
url="https://www.iana.org/time-zones/repository/releases/tzdata${vers}.tar.gz"
tzcode_url="https://www.iana.org/time-zones/repository/releases/tzcode${vers}.tar.gz"
verify="${url}.asc"
tzcode_verify="${tzcode_url}.asc"
digest=""
arch=`uname -m`
build=B1
src="timezone-${vers}"
OPT_CONFIG=""
DOCS="LICENSE NEWS README"
patchfiles=""
# specifies files that are not in source archive and patchfiles
addfiles=""
compress=tzst

_timezones=('africa' 'antarctica' 'asia' 'australasia'
            'europe' 'northamerica' 'southamerica'
            'etcetera' 'backward' 'factory')
##############################################################

source /usr/share/plamobuild_functions.sh

# このスクリプトで使う1文字変数の意味
#
# $W : このスクリプトを動かすカレントディレクトリ
# $S : ソースコードのあるディレクトリ(デフォルト: $W/${src})
# $B : ビルド用ディレクトリ(デフォルト: /tmp/build)
# $P : ビルドしたファイルをインストールするディレクトリ（デフォルト: $W/work)

if [ $# -eq 0 ] ; then
  opt_download=0 ; opt_config=1 ; opt_build=1 ; opt_package=1
else
  opt_download=0 ; opt_config=0 ; opt_build=0 ; opt_package=0
  for i in $@ ; do
    case $i in
    download) opt_download=1 ;;
    config) opt_config=1 ;;
    build) opt_build=1 ;;
    package) opt_package=1 ;;
    esac
  done
fi
if [ $opt_download -eq 1 ] ; then
    if [ ! -f ${url##*/} ]; then
        wget $url
    fi
    if [ ! -f ${verify##*/} ]; then
        wget $verify
    fi
    gpg --verify ${verify##*/}
    if [ $? -ne 0 ]; then
        echo "archive verify failed"
        exit 1
    fi
    if [ ! -f ${tzcode_url##*/} ]; then
        wget $tzcode_url
    fi
    if [ ! -f ${tzcode_verify##*/} ]; then
        wget $tzcode_verify
    fi
    gpg --verify ${tzcode_verify##*/}
    if [ $? -ne 0 ]; then
        echo "archive verify failed"
        exit 1
    fi
    mkdir $src
    tar xvf ${url##*/} -C $src
    tar xvf ${tzcode_url##*/} -C $src
fi

if [ $opt_config -eq 1 ] ; then

    for f in $addfiles $patchfiles
    do
        if [ ! -f $f ]; then
            echo "Required file ($f) is missing."
            exit 255
        fi
    done

######################################################################
#  source copy build. patch apply in build dir
######################################################################
    if [ -d $B ] ; then rm -rf $B ; fi ;  cp -a $S $B  
    cd $B
    for patch in $patchfiles ; do
       patch -p1 < $W/$patch
    done
fi

if [ $opt_build -eq 1 ] ; then
    cd $B 
    export LDFLAGS='-Wl,--as-needed'
    make LFLAGS=${LDFLAGS}
    if [ $? != 0 ]; then
        echo "build error. $0 script stop"
        exit 255
    fi
fi

if [ $opt_package -eq 1 ] ; then
  check_root
  if [ -d $P ] ; then rm -rf $P ; fi ; mkdir -p $P
  cd $B

  make install DESTDIR=$P

  # install tzdata stuff
  ./zic -b fat -d "${P}"/usr/share/zoneinfo ${_timezones[@]}
  ./zic -b fat -d "${P}"/usr/share/zoneinfo/posix ${_timezones[@]}
  ./zic -b fat -d "${P}"/usr/share/zoneinfo/right -L leapseconds ${_timezones[@]}
  # This creates the posixrules file.
  ./zic -b fat -d "${P}"/usr/share/zoneinfo -p America/New_York
  install -m644 -t "${P}"/usr/share/zoneinfo iso3166.tab leap-seconds.list zone1970.tab zone.tab SECURITY

  rm -rfv $P/etc

  # plamo files
  install -v -D -m755 $W/timeconfig $P/usr/sbin/timeconfig
  install -v -D -m755 $W/setup.timeconfig $P/usr/lib/setup/setup.timeconfig
  install -v -D -m755 $W/esetup.timeconfig $P/usr/lib/setup/esetup.timeconfig

  install -v -d $P/var/log/setup
  ln -s /usr/lib/setup/setup.timeconfig $P/var/log/setup/setup.timeconfig
  ln -s /usr/lib/setup/esetup.timeconfig $P/var/log/setup/esetup.timeconfig

################################
#      install tweaks
#  strip binaries, delete locale except ja, compress man,
#  install docs and patches, compress them and  chown root.root
################################
  install_tweak

#############################
#   convert symlink to null file and
#   add "ln -sf" command into install/doinst.sh
################################
  convert_links

  cd $P
  /sbin/makepkg ../$pkg.$compress <<EOF
y
1
EOF

fi
