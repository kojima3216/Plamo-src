#!/bin/sh
##############################################################
pkgbase="ncurses"
vers="6.4_20230418"
url="https://invisible-mirror.net/archives/ncurses/current/ncurses-${vers/_/-}.tgz"
verify="${url}.asc"
digest=""
arch=`uname -m`
build=B1
src="ncurses-${vers/_/-}"
OPT_CONFIG="
	--mandir=/usr/share/man
	--with-man-page-format=normal
	--with-shared
	--without-normal
	--with-cxx-shared
	--without-debug
	--without-ada
	--disable-stripping
	--enable-widec
	--enable-pc-files
"
DOCS="AUTHORS COPYING INSTALL NEWS README README.MinGW README.emx doc"
patchfiles=""
# specifies files that are not in source archive and patchfiles
addfiles=""
compress=tzst
##############################################################

source /usr/share/plamobuild_functions.sh

# このスクリプトで使う1文字変数の意味
#
# $W : このスクリプトを動かすカレントディレクトリ
# $S : ソースコードのあるディレクトリ(デフォルト: $W/${src})
# $B : ビルド用ディレクトリ(デフォルト: /tmp/build)
# $P : ビルドしたファイルをインストールするディレクトリ（デフォルト: $W/work)

if [ $# -eq 0 ] ; then
  opt_download=0 ; opt_config=1 ; opt_build=1 ; opt_package=1
else
  opt_download=0 ; opt_config=0 ; opt_build=0 ; opt_package=0
  for i in $@ ; do
    case $i in
    download) opt_download=1 ;;
    config) opt_config=1 ;;
    build) opt_build=1 ;;
    package) opt_package=1 ;;
    esac
  done
fi
if [ $opt_download -eq 1 ] ; then
    download_sources
    tar xvf ${url##*/}
fi


if [ $opt_config -eq 1 ] ; then

    for f in $addfiles $patchfiles
    do
        if [ ! -f $f ]; then
            echo "Required file ($f) is missing."
            exit 255
        fi
    done

######################################################################
#  out of tree build. patch apply in src dir
######################################################################
    if [ -d $B ] ; then rm -rf $B ; fi ; cp -a $S $B
    cd $B
    for patch in $patchfiles ; do
        if [ ! -f .${patch} ]; then
            patch -p1 < $W/$patch
            touch .${patch}
        fi
    done
    # if [ -f autogen.sh ] ; then
    #   sh ./autogen.sh
    # fi
    export PKG_CONFIG_PATH=/usr/${libdir}/pkgconfig:/usr/share/pkgconfig
    export LDFLAGS='-Wl,--as-needed' 
    ./configure --prefix=/usr --libdir=/usr/${libdir} --sysconfdir=/etc --localstatedir=/var --mandir=/usr/share/man ${OPT_CONFIG}
    if [ $? != 0 ]; then
        echo "configure error. $0 script stop"
        exit 255
    fi
fi

if [ $opt_build -eq 1 ] ; then
    cd $B 
    export LDFLAGS='-Wl,--as-needed'
    make -j3
    if [ $? != 0 ]; then
        echo "build error. $0 script stop"
        exit 255
    fi
fi

if [ $opt_package -eq 1 ] ; then
  check_root
  if [ -d $P ] ; then rm -rf $P ; fi ; mkdir -p $P
  cd $B

  export LDFLAGS='-Wl,--as-needed'
  make install DESTDIR=$P

  install -v -d $P/lib
  mv -v $P/usr/lib/libncursesw.so.6* $P/lib
  ln -sfv ../../lib/$(readlink $P/usr/lib/libncursesw.so) $P/usr/lib/libncursesw.so

  for lib in ncurses form panel menu ; do
    rm -vf                    $P/usr/lib/lib${lib}.so
    echo "INPUT(-l${lib}w)" > $P/usr/lib/lib${lib}.so
    ln -sfv ${lib}w.pc        $P/usr/lib/pkgconfig/${lib}.pc
  done

  rm -vf                     $P/usr/lib/libcursesw.so
  echo "INPUT(-lncursesw)" > $P/usr/lib/libcursesw.so
  ln -sfv libncurses.so      $P/usr/lib/libcurses.so

################################
#      install tweaks
#  strip binaries, delete locale except ja, compress man,
#  install docs and patches, compress them and  chown root.root
################################
  install_tweak

#############################
#   convert symlink to null file and
#   add "ln -sf" command into install/doinst.sh
################################
  convert_links

  cd $P
  /sbin/makepkg ../$pkg.$compress <<EOF
y
1
EOF

fi
