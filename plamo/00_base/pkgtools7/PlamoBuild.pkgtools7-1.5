#!/bin/sh
##############################################################
pkgbase="pkgtool7"
vers="1.5"
url="https://busybox.net/downloads/busybox-1.33.1.tar.bz2"
bb_vers='1.33.1'
verify=""
digest=""
arch=`uname -m`
build=B1
src="busybox-1.33.1"
OPT_CONFIG=""
DOCS=""
patchfiles=""
# specifies files that are not in source archive and patchfiles
zstd="zstd-1.5.0-static"
pkg_scripts="installpkg installpkg2 installpkg2.mes makepkg updatepkg"
compress=txz
##############################################################

source /usr/share/plamobuild_functions.sh

# このスクリプトで使う1文字変数の意味
#
# $W : このスクリプトを動かすカレントディレクトリ
# $S : ソースコードのあるディレクトリ(デフォルト: $W/${src})
# $B : ビルド用ディレクトリ(デフォルト: /tmp/build)
# $P : ビルドしたファイルをインストールするディレクトリ（デフォルト: $W/work)

if [ $# -eq 0 ] ; then
  opt_download=0 ; opt_config=1 ; opt_build=1 ; opt_package=1
else
  opt_download=0 ; opt_config=0 ; opt_build=0 ; opt_package=0
  for i in $@ ; do
    case $i in
    download) opt_download=1 ;;
    config) opt_config=1 ;;
    build) opt_build=1 ;;
    package) opt_package=1 ;;
    esac
  done
fi
if [ $opt_download -eq 1 ] ; then
    download_sources
fi


if [ $opt_config -eq 1 ] ; then

     for f in $addfiles $patchfiles
    do
        if [ ! -f $f ]; then
            echo "Required file ($f) is missing."
            exit 255
        fi
    done

######################################################################
#  copy source build. patch apply in src dir
######################################################################
    if [ -d $B ] ; then rm -rf $B ; fi ; cp -a $S $B 
    cd $B
    for patch in $patchfiles ; do
        if [ ! -f .${patch} ]; then
            patch -p1 < $W/$patch
            touch .${patch}
        fi
    done
    # if [ -f autogen.sh ] ; then
    #   sh ./autogen.sh
    # fi

    echo "copy busybox's config file"
    cp $W/config-busybox-${bb_vers} .config
    
fi

if [ $opt_build -eq 1 ] ; then
    cd $B 
    export LDFLAGS='-Wl,--as-needed'
    make -j3
    if [ $? != 0 ]; then
        echo "build error. $0 script stop"
        exit 255
    fi
fi

if [ $opt_package -eq 1 ] ; then
  check_root
  if [ -d $P ] ; then rm -rf $P ; fi ; mkdir -p $P
  cd $B
  # どうも busybox にはインストール先を指定する機能は無さそうだ
  make install
  mkdir -p $P/sbin/installer_new
  cp -av _install/bin/* $P/sbin/installer_new
  cp -av $W/$zstd $P/sbin/installer_new
  ( cd $P/sbin/installer_new ; ln -sf $zstd zstd )

  for i in $pkg_scripts ; do
      cp -av $W/$i $P/sbin
  done

  mkdir -p $P/install
  cat <<"EOF" > $P/install/initpkg
if [ -x /bin/mv ]; then
  if [ -d /sbin/installer ]; then
    /bin/mv /sbin/installer /sbin/installer_old
  fi
  /bin/mv /sbin/installer_new /sbin/installer
else
  echo "cannot exec /bin/mv. move /sbin/installer_new to /sbin/installer manually"
fi

EOF
  

################################
#      install tweaks
#  strip binaries, delete locale except ja, compress man,
#  install docs and patches, compress them and  chown root.root
################################
  install_tweak

#############################
#   convert symlink to null file and
#   add "ln -sf" command into install/doinst.sh
################################
  convert_links

  cd $P
  /sbin/makepkg ../$pkg.$compress <<EOF
y
1
EOF

fi
