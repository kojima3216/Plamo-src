#!/bin/sh
##############################################################
pkgbase='vim'
vers='9.0.2103'
url="https://github.com/vim/vim/archive/refs/tags/v${vers}.tar.gz"
digest=""
arch=`uname -m`
build=B1
src="vim-${vers}"
OPT_CONFIG='--enable-multibyte --enable-gui=no --without-x --disable-gpm --disable-libsodium'
DOCS='README.md README.txt README_ami.txt README_amibin.txt README_amisrc.txt README_bindos.txt README_dos.txt README_extra.txt README_mac.txt README_ole.txt README_os2.txt README_os390.txt README_src.txt README_srcdos.txt README_unix.txt README_vms.txt README_w32s.txt uninstal.txt'
patchfiles=''
compress=tzst
##############################################################

source /usr/share/plamobuild_functions.sh

# このスクリプトで使う1文字変数の意味
# 
# $W : このスクリプトを動かすカレントディレクトリ
# $S : ソースコードのあるディレクトリ(デフォルト: $W/${src})
# $B : ビルド用ディレクトリ(デフォルト: /tmp/build{,32})
# $P : ビルドしたファイルをインストールするディレクトリ（デフォルト: $W/work)


if [ $# -eq 0 ] ; then
  opt_download=0 ; opt_config=1 ; opt_build=1 ; opt_package=1
else
  opt_download=0 ; opt_config=0 ; opt_build=0 ; opt_package=0
  for i in $@ ; do
    case $i in
    download) opt_download=1 ;;
    config) opt_config=1 ;;
    build) opt_build=1 ;;
    package) opt_package=1 ;;
    esac
  done
fi
if [ $opt_download -eq 1 ] ; then
    download_sources
fi

if [ $opt_config -eq 1 ] ; then
    if [ -d $B ] ; then rm -rf $B ; fi ; mkdir -p $B ; cp -a $S/* $B
######################################################################
#  copy sources, so need patch in the build dir
######################################################################
    cd $B
    for patch in $patchfiles ; do
        if [ ! -f .${patch} ]; then
            patch -p1 < $W/$patch
            touch .${patch}
        fi
    done

    # change the default location of vimrc file
    echo '#define SYS_VIMRC_FILE "/etc/vimrc"' >> src/feature.h

    export PKG_CONFIG_PATH=/usr/${libdir}/pkgconfig:/usr/share/pkgconfig
    export LDFLAGS='-Wl,--as-needed' 
    $S/configure --prefix=/usr --sysconfdir=/etc --localstatedir=/var --mandir='${prefix}'/share/man ${OPT_CONFIG[$i]}
    
    if [ $? != 0 ]; then
	echo "configure error. $0 script stop"
	exit 255
    fi
fi
    
if [ $opt_build -eq 1 ] ; then
    cd $B
    export LDFLAGS='-Wl,--as-needed'
    make -j3
    if [ $? != 0 ]; then
	echo "build error. $0 script stop"
	exit 255
    fi
fi

if [ $opt_package -eq 1 ] ; then
  check_root
  if [ -d $P ] ; then rm -rf $P ; fi ; mkdir -p $P
  cd $B
  export LDFLAGS='-Wl,--as-needed'
  make install DESTDIR=$P

  # remove desktop files and icons
  rm -rfv $P/usr/share/{applications,icons}

  # fr/  fr.ISO8859-1/  fr.UTF-8/  it/  it.ISO8859-1/  it.UTF-8/  ja/  man1/  pl/  pl.ISO8859-2/  pl.UTF-8/  ru.KOI8-R/  ru.UTF-8/
  rm -rfv $P/usr/share/man/{fr,it,pl,ru}*

  ln -sfv vim $P/usr/bin/vi

  for L in $P/usr/share/man/{,*/}man1/vim.1;
  do
      ln -sfv vim.1 $(dirname $L)/vi.1
  done

################################
#      install tweaks
#  strip binaries, delete locale except ja, compress man, 
#  install docs and patches, compress them and  chown root.root
################################
  install_tweak

#############################
#   convert symlink to null file and 
#   add "ln -sf" command into install/doinst.sh
################################
  convert_links

  cd $P
  /sbin/makepkg ../$pkg.$compress <<EOF
y
1
EOF

fi
