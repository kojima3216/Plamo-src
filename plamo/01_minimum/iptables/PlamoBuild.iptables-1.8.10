#!/bin/sh
##############################################################
pkgbase="iptables"
vers="1.8.10"
url="https://www.netfilter.org/pub/iptables/iptables-${vers}.tar.xz"
verify="${url}.sig"
digest=""
arch=`uname -m`
build=B1
src="iptables-${vers}"
OPT_CONFIG="--enable-shared
	    --enable-libipq
            --with-xtlibdir=/lib/xtables
	    --enable-bpf-compiler
	    --enable-nfsynproxy
	    --sbindir=/sbin"
DOCS="COPYING INSTALL"
patchfiles=""
# specifies files that are not in source archive and patchfiles
addfiles=""
compress=tzst
##############################################################

source /usr/share/plamobuild_functions.sh

# このスクリプトで使う1文字変数の意味
#
# $W : このスクリプトを動かすカレントディレクトリ
# $S : ソースコードのあるディレクトリ(デフォルト: $W/${src})
# $B : ビルド用ディレクトリ(デフォルト: /tmp/build)
# $P : ビルドしたファイルをインストールするディレクトリ（デフォルト: $W/work)

if [ $# -eq 0 ] ; then
  opt_download=0 ; opt_config=1 ; opt_build=1 ; opt_package=1
else
  opt_download=0 ; opt_config=0 ; opt_build=0 ; opt_package=0
  for i in $@ ; do
    case $i in
    download) opt_download=1 ;;
    config) opt_config=1 ;;
    build) opt_build=1 ;;
    package) opt_package=1 ;;
    esac
  done
fi
if [ $opt_download -eq 1 ] ; then
    download_sources
fi


if [ $opt_config -eq 1 ] ; then

    for f in $addfiles $patchfiles
    do
        if [ ! -f $f ]; then
            echo "Required file ($f) is missing."
            exit 255
        fi
    done

######################################################################
#  out of tree build. patch apply in src dir
######################################################################
    if [ -d $B ] ; then rm -rf $B ; fi ; mkdir -p $B 
    cd $S
    for patch in $patchfiles ; do
        if [ ! -f .${patch} ]; then
            patch -p1 < $W/$patch
            touch .${patch}
        fi
    done
    # if [ -f autogen.sh ] ; then
    #   sh ./autogen.sh
    # fi
    cd $B
    export PKG_CONFIG_PATH=/usr/${libdir}/pkgconfig:/usr/share/pkgconfig
    export LDFLAGS='-Wl,--as-needed' 
    $S/configure --prefix=/usr --libdir=/usr/${libdir} --sysconfdir=/etc --localstatedir=/var --mandir=/usr/share/man ${OPT_CONFIG}
    if [ $? != 0 ]; then
        echo "configure error. $0 script stop"
        exit 255
    fi
fi

if [ $opt_build -eq 1 ] ; then
    cd $B 
    export LDFLAGS='-Wl,--as-needed'
    make -j3
    if [ $? != 0 ]; then
        echo "build error. $0 script stop"
        exit 255
    fi
fi

if [ $opt_package -eq 1 ] ; then
  check_root
  if [ -d $P ] ; then rm -rf $P ; fi ; mkdir -p $P
  cd $B

  export LDFLAGS='-Wl,--as-needed'
  make install DESTDIR=$P

  ln -sfv ../../sbin/xtables-legacy-multi $P/usr/bin/iptables-xml

  for file in ip4tc ip6tc ipq xtables 
  do
    mv -v $P/usr/${libdir}/lib${file}.so.* $P/lib
    ln -sfv ../../${libdir}/$(readlink $P/usr/lib/lib${file}.so) $P/usr/lib/lib${file}.so
  done

  mkdir -p $P/etc/rc.d/init.d
  cat <<"EOF" > $P/etc/rc.d/init.d/iptables
#!/bin/sh
########################################################################
# Begin iptables
#
# Description : Start iptables
#
# Authors     : Ken Moffat - ken@linuxfromscratch.org
#               Bruce Dubbs - bdubbs@linuxfromscratch.org
#
# Version     : LFS 7.0
#
########################################################################

### BEGIN INIT INFO
# Provides:          iptables
# Required-Start:    
# Should-Start:
# Required-Stop:     $local_fs
# Should-Stop:
# Default-Start:     3 4 5
# Default-Stop:     
# Short-Description: Loads iptables rules.
# Description:       Iptables provides firewall for Linux systems.
# X-LFS-Provided-By: BLFS / LFS 7.0
### END INIT INFO

. /lib/lsb/init-functions

IPTABLES_TYPES=("iptables" "ip6tables")
IPTABLES=""

start() {
    IPTABLES=$1
    log_info_msg "Starting ${IPTABLES}..."
    if [ -f /etc/sysconfig/$IPTABLES ]; then
	/sbin/"$IPTABLES"-restore /etc/sysconfig/$IPTABLES
    fi
    evaluate_retval
}

lock() {
    IPTABLES=$1
    log_info_msg "Locking system $IPTABLES firewall..."
    /sbin/$IPTABLES --policy INPUT   DROP && \
	/sbin/$IPTABLES --policy OUTPUT  DROP && \
	/sbin/$IPTABLES --policy FORWARD DROP && \
	/sbin/$IPTABLES           --flush && \
	/sbin/$IPTABLES -t nat    --flush && \
	/sbin/$IPTABLES -t mangle --flush && \
	/sbin/$IPTABLES           --delete-chain && \
	/sbin/$IPTABLES -t nat    --delete-chain && \
	/sbin/$IPTABLES -t mangle --delete-chain && \
	/sbin/$IPTABLES -A INPUT  -i lo -j ACCEPT && \
	/sbin/$IPTABLES -A OUTPUT -o lo -j ACCEPT && \
    evaluate_retval
}

clear() {
    IPTABLES=$1
    log_info_msg "Clearing system iptables iptables..."
    /sbin/$IPTABLES --policy INPUT   ACCEPT && \
	/sbin/$IPTABLES --policy OUTPUT  ACCEPT && \
	/sbin/$IPTABLES --policy FORWARD ACCEPT && \
	/sbin/$IPTABLES           --flush && \
	/sbin/$IPTABLES -t nat    --flush && \
	/sbin/$IPTABLES -t mangle --flush && \
	/sbin/$IPTABLES           --delete-chain && \
	/sbin/$IPTABLES -t nat    --delete-chain && \
	/sbin/$IPTABLES -t mangle --delete-chain
    evaluate_retval
}

status() {
    IPTABLES=$1
    /sbin/$IPTABLES           --numeric --list
    /sbin/$IPTABLES -t nat    --numeric --list
    /sbin/$IPTABLES -t mangle --numeric --list
}

save() {
    IPTABLES=$1
    log_info_msg "Saving ${IPTABLES} rules..."
    /sbin/"$IPTABLES"-save > /etc/sysconfig/$IPTABLES
    evaluate_retval
}

case "$1" in
    start)
	for t in ${IPTABLES_TYPES[@]}
	do
	    start $t
	done
        ;;

    stop)
	for t in ${IPTABLES_TYPES[@]}
	do
	    clear $t
	done
        ;;

    lock)
	for t in ${IPTABLES_TYPES[@]}
	do
	    lock $t
	done
        ;;

    save)
	for t in ${IPTABLES_TYPES[@]}
	do
	    save $t
	done
        ;;

    clear)
	for t in ${IPTABLES_TYPES[@]}
	do
	    clear $t
	done
        ;;

    status)
	status iptables
        ;;

    status6)
	status ip6tables
	;;

    *)
        echo "Usage: $0 {start|stop|clear|lock|status|status6|save}"
        exit 1
        ;;
esac

# End /etc/init.d/iptables
EOF

  chmod +x $P/etc/rc.d/init.d/iptables
  
  for i in $(seq 0 6)
  do
      install -dm755 -v $P/etc/rc.d/rc"$i".d
      case $i in
	  3|4|5)
	      ln -sfv ../init.d/iptables $P/etc/rc.d/rc"$i".d/S19iptables
	      ;;
	  0|1|2|6)
	      ln -sfv ../init.d/iptables $P/etc/rc.d/rc"$i".d/K81iptables
	      ;;
      esac
  done
  
################################
#      install tweaks
#  strip binaries, delete locale except ja, compress man,
#  install docs and patches, compress them and  chown root.root
################################
  install_tweak

#############################
#   convert symlink to null file and
#   add "ln -sf" command into install/doinst.sh
################################
  convert_links

  cd $P
  /sbin/makepkg ../$pkg.$compress <<EOF
y
1
EOF

fi
