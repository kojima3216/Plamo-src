#!/bin/sh
##############################################################
pkgbase="nfs_utils"
vers="2.6.4"
url="https://www.kernel.org/pub/linux/utils/nfs-utils/${vers}/nfs-utils-${vers}.tar.xz"
verify=""
digest=""
arch=`uname -m`
build=B1
src="nfs-utils-${vers}"
OPT_CONFIG="--sbindir=/sbin --disable-static --enable-shared --without-tcp-wrappers --disable-gss"
DOCS="COPYING INSTALL NEWS README"
patchfiles=""
# specifies files that are not in source archive and patchfiles
addfiles="nfs-client.init nfs-server.init exports nfs-server.config nfs4_setup.sh id_resolver.conf"
compress=txz
##############################################################

source /usr/share/plamobuild_functions.sh

# このスクリプトで使う1文字変数の意味
#
# $W : このスクリプトを動かすカレントディレクトリ
# $S : ソースコードのあるディレクトリ(デフォルト: $W/${src})
# $B : ビルド用ディレクトリ(デフォルト: /tmp/build)
# $P : ビルドしたファイルをインストールするディレクトリ（デフォルト: $W/work)

if [ $# -eq 0 ] ; then
  opt_download=0 ; opt_config=1 ; opt_build=1 ; opt_package=1
else
  opt_download=0 ; opt_config=0 ; opt_build=0 ; opt_package=0
  for i in $@ ; do
    case $i in
    download) opt_download=1 ;;
    config) opt_config=1 ;;
    build) opt_build=1 ;;
    package) opt_package=1 ;;
    esac
  done
fi
if [ $opt_download -eq 1 ] ; then
    download_sources
fi


if [ $opt_config -eq 1 ] ; then

    for f in $addfiles $patchfiles
    do
        if [ ! -f $f ]; then
            echo "Required file ($f) is missing."
            exit 255
        fi
    done

######################################################################
#  copy source build, patch apply in build dir
######################################################################
    if [ -d $B ] ; then rm -rf $B ; fi ; cp -a $S $B 
    cd $B
    for patch in $patchfiles ; do
        if [ ! -f .${patch} ]; then
            patch -p1 < $W/$patch
            touch .${patch}
        fi
    done
    # if [ -f autogen.sh ] ; then
    #   sh ./autogen.sh
    # fi

    export PKG_CONFIG_PATH=/usr/${libdir}/pkgconfig:/usr/share/pkgconfig
    export LDFLAGS='-Wl,--as-needed' 
    ./configure --prefix=/usr --libdir=/usr/${libdir} --sysconfdir=/etc --localstatedir=/var --mandir=/usr/share/man ${OPT_CONFIG}
    if [ $? != 0 ]; then
        echo "configure error. $0 script stop"
        exit 255
    fi
fi

if [ $opt_build -eq 1 ] ; then
    cd $B 
    export LDFLAGS='-Wl,--as-needed'
    make -j3
    if [ $? != 0 ]; then
        echo "build error. $0 script stop"
        exit 255
    fi
fi

if [ $opt_package -eq 1 ] ; then
  check_root
  if [ -d $P ] ; then rm -rf $P ; fi ; mkdir -p $P
  cd $B

  export LDFLAGS='-Wl,--as-needed'
  make install DESTDIR=$P

  install -dm755 -v $P/usr/sbin/
  mv -v $P/sbin/start-statd $P/usr/sbin/

  install -D -m 644 -v $S/utils/mount/nfsmount.conf $P/etc/nfsmount.conf
  install -D -m 644 -v $S/nfs.conf $P/etc/nfs.conf

  install -D -m 644 -v $W/exports $P/etc/exports
  install -D -m 644 -v $W/exports $docdir/$src/exports
  install -D -m 644 -v $W/id_resolver.conf $P/etc/request-key.d/id_resolver.conf
  install -D -m 644 -v $W/id_resolver.conf $docdir/$src/id_resolver.conf

  install -d -v $P/etc/exports.d
  install -d -m 555 -v $P/var/lib/nfs/rpc_pipefs
  install -d -v $P/var/lib/nfs/v4recovery

  install -D -m 755 -v $W/nfs4_setup.sh $P/sbin/nfs4_setup.sh
  install -D -m 755 -v $W/nfs4_setup.sh $docdir/$src/nfs4_setup.sh

  install -Dm644 -v $S/support/nfsidmap/idmapd.conf $P/etc/idmapd.conf

  install -Dm644 -v $W/nfs-server.config $P/etc/sysconfig/nfs-server
  install -Dm644 -v $W/nfs-server.config $docdir/$src/nfs-server.config

  # init script
  install -D -m 755 -v $W/nfs-client.init $P/etc/rc.d/init.d/nfs-client
  install -D -m 755 -v $W/nfs-client.init $docdir/$src/nfs-client.init
  install -D -m 644 -v $W/nfs-server.init $P/etc/rc.d/init.d/nfs-server
  install -D -m 644 -v $W/nfs-server.init $docdir/$src/nfs-server.init

  for i in $(seq 0 6)
  do
    install -dm755 -v $P/etc/rc.d/rc"$i".d/
    case $i in
      0|1|2|6)
        ln -sf ../init.d/nfs-client $P/etc/rc.d/rc"$i".d/K48nfs-client
	ln -sf ../init.d/nfs-server $P/etc/rc.d/rc"$i".d/K48nfs-server
	;;
      3|4|5)
	ln -sf ../init.d/nfs-client $P/etc/rc.d/rc"$i".d/S24nfs-client
	ln -sf ../init.d/nfs-server $P/etc/rc.d/rc"$i".d/S24nfs-server
	;;
    esac
  done
  
  mkdir -p $P/install
  cat <<EOF > $P/install/initpkg
nfs_chk=\$(grep nfs /etc/services)
if [ "\${nfs_chk}.x" = ".x" ]; then
    echo "adding nfs service into /etc/services"
    echo "nfs        2049/tcp" >> /etc/services
    echo "nfs        2049/udp" >> /etc/services
fi
EOF

################################
#      install tweaks
#  strip binaries, delete locale except ja, compress man,
#  install docs and patches, compress them and  chown root.root
################################
  install_tweak

#############################
#   convert symlink to null file and
#   add "ln -sf" command into install/doinst.sh
################################
  convert_links

  cd $P
  /sbin/makepkg ../$pkg.$compress <<EOF
y
1
EOF

fi
