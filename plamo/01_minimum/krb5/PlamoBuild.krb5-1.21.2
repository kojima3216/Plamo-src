#!/bin/sh
##############################################################
pkgbase="krb5"
vers="1.21.2"
url="https://kerberos.org/dist/krb5/${vers%.*}/krb5-${vers}.tar.gz"
verify=""
digest="md5sum:97d5f3a48235c53f6d537c877290d2af"
arch=`uname -m`
build=B2
src="krb5-${vers}"
OPT_CONFIG="
	--sbindir=/usr/bin
	--runstatedir=/run
	--enable-shared
	--with-system-et
	--with-system-ss
	--disable-rpath
	--enable-dns-for-realm
	--without-system-verto
	--without-keyutils"
DOCS="NOTICE README doc"
# https://raw.githubusercontent.com/archlinux/svntogit-packages/packages/krb5/trunk/krb5-config_LDFLAGS.patch
patchfiles=""
# specifies files that are not in source archive and patchfiles
addfiles=""
compress=tzst
##############################################################

source /usr/share/plamobuild_functions.sh

export CFLAGS=$CFLAGS" -fPIC -fno-strict-aliasing -fstack-protector-all"
export CPPFLAGS=$CPPFLAGS" -I/usr/include/et"


# このスクリプトで使う1文字変数の意味
#
# $W : このスクリプトを動かすカレントディレクトリ
# $S : ソースコードのあるディレクトリ(デフォルト: $W/${src})
# $B : ビルド用ディレクトリ(デフォルト: /tmp/build)
# $P : ビルドしたファイルをインストールするディレクトリ（デフォルト: $W/work)

if [ $# -eq 0 ] ; then
  opt_download=0 ; opt_config=1 ; opt_build=1 ; opt_package=1
else
  opt_download=0 ; opt_config=0 ; opt_build=0 ; opt_package=0
  for i in $@ ; do
    case $i in
    download) opt_download=1 ;;
    config) opt_config=1 ;;
    build) opt_build=1 ;;
    package) opt_package=1 ;;
    esac
  done
fi
if [ $opt_download -eq 1 ] ; then
    download_sources
fi

if [ $opt_config -eq 1 ] ; then

    for f in $addfiles $patchfiles
    do
        if [ ! -f $f ]; then
            echo "Required file ($f) is missing."
            exit 255
        fi
    done

######################################################################
#  source copy build. patch apply in build dir
######################################################################
    if [ -d $B ] ; then rm -rf $B ; fi ;  cp -a $S $B  
    cd $B
    for patch in $patchfiles ; do
       patch -p1 < $W/$patch
    done
    # if [ -f autogen.sh ] ; then
    #   sh ./autogen.sh
    # fi

    cd $B/src
    # BLFS でやってるテスト用コードの修正
    # make check でテストしないなら必要ない．
    sed -i -e '/eq 0/{N;s/12 //}'    plugins/kdb/db2/libdb2/test/run.test

    autoreconf -i
    
    export PKG_CONFIG_PATH=/usr/${libdir}/pkgconfig:/usr/share/pkgconfig
    export LDFLAGS='-Wl,--as-needed' 
    ./configure --prefix=/usr --libdir=/usr/${libdir} --sysconfdir=/etc --localstatedir=/var --mandir=/usr/share/man ${OPT_CONFIG}
    if [ $? != 0 ]; then
        echo "configure error. $0 script stop"
        exit 255
    fi
fi

if [ $opt_build -eq 1 ] ; then
    cd $B/src
    export LDFLAGS='-Wl,--as-needed'
    make -j3
    if [ $? != 0 ]; then
        echo "build error. $0 script stop"
        exit 255
    fi
fi

if [ $opt_package -eq 1 ] ; then
  check_root
  if [ -d $P ] ; then rm -rf $P ; fi ; mkdir -p $P
  cd $B/src

  make install DESTDIR=$P EXAMPLEDIR=/usr/share/doc/${src}/examples

  # Fix FS#29889
  install -m 644 plugins/kdb/ldap/libkdb_ldap/kerberos.{ldif,schema} $P/usr/share/doc/${src}/examples

  install -Dpm 644 config-files/krb5.conf -t $P/etc
  install -Dpm 644 config-files/kdc.conf -t $P/var/lib/krb5kdc

  install -Dm 644 util/ac_check_krb5.m4 -t $P/usr/share/aclocal
  
################################
#      install tweaks
#  strip binaries, delete locale except ja, compress man,
#  install docs and patches, compress them and  chown root.root
################################
  install_tweak

#############################
#   convert symlink to null file and
#   add "ln -sf" command into install/doinst.sh
################################
  convert_links

  cd $P
  /sbin/makepkg ../$pkg.$compress <<EOF
y
1
EOF

fi
