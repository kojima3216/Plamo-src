#!/bin/sh
##############################################################
pkgbase='proftpd'
vers='1.3.8b'
url="ftp://ftp.${pkgbase}.org/distrib/source/${pkgbase}-${vers}.tar.gz"
verify="${url}.asc"
arch=`uname -m`
build=B1
src="${pkgbase}-${vers}"
OPT_CONFIG="--enable-shared
	    --enable-dso --disable-ident
	    --with-lastlog=/var/log/lastlog
	    --enable-openssl --with-shared=mod_tls"
DOCS='COPYING ChangeLog INSTALL NEWS README.AIX README.DSO README.FreeBSD README.IPv6 README.LDAP README.PAM README.Solaris2.5x README.Unixware README.capabilities README.classes README.controls README.cygwin README.facl README.md README.modules README.ports RELEASE_NOTES'
patchfiles=''
addfiles="proftpd.conf proftpd.init"
compress=txz
##############################################################

source /usr/share/plamobuild_functions.sh

# このスクリプトで使う1文字変数の意味
#
# $W : このスクリプトを動かすカレントディレクトリ
# $S : ソースコードのあるディレクトリ(デフォルト: $W/${src})
# $B : ビルド用ディレクトリ(デフォルト: /tmp/build{,32})
# $P : ビルドしたファイルをインストールするディレクトリ（デフォルト: $W/work)


if [ $# -eq 0 ] ; then
  opt_download=0 ; opt_config=1 ; opt_build=1 ; opt_package=1
else
  opt_download=0 ; opt_config=0 ; opt_build=0 ; opt_package=0
  for i in $@ ; do
    case $i in
    download) opt_download=1 ;;
    config) opt_config=1 ;;
    build) opt_build=1 ;;
    package) opt_package=1 ;;
    esac
  done
fi
if [ $opt_download -eq 1 ] ; then
  download_sources
fi

if [ $opt_config -eq 1 ] ; then

  for f in $addfiles
  do
    if [ ! -f $f ]; then
      echo "Required file ($f) is missing."
      exit 255
    fi
  done

  if [ -d $B ] ; then rm -rf $B ; fi ; cp -a $S $B
######################################################################
#  don't copy sources, so need patch in the src dir
######################################################################
  cd $B
  for patch in $patchfiles ; do
    patch -p1 < $W/$patch
  done
  # if [ -f autogen.sh ] ; then
  #   sh ./autogen.sh
  # fi

  export PKG_CONFIG_PATH=/usr/${libdir}/pkgconfig:/usr/share/pkgconfig:/opt/kde/${libdir}/pkgconfig
  #export LDFLAGS='-Wl,--as-needed' 
  ./configure --prefix=/usr --sysconfdir=/etc --localstatedir=/run --mandir='${prefix}'/share/man ${OPT_CONFIG}
    
  if [ $? != 0 ]; then
    echo "configure error. $0 script stop"
    exit 255
  fi
fi
    
if [ $opt_build -eq 1 ] ; then
  cd $B
  #export LDFLAGS='-Wl,--as-needed'
  make
  if [ $? != 0 ]; then
    echo "build error. $0 script stop"
    exit 255
  fi
fi

if [ $opt_package -eq 1 ] ; then
  check_root
  if [ -d $P ] ; then rm -rf $P ; fi ; mkdir -p $P
  cd $B
  export LDFLAGS='-Wl,--as-needed'
  make install DESTDIR=$P

  install -m644 -v $W/proftpd.conf $P/etc/proftpd.conf.dist
  install -m644 -v $W/proftpd.conf $docdir/$src/proftpd.conf_plamo_default
  rm -vf $P/etc/proftpd.conf

  install -Dm644 $W/proftpd.init $P/etc/rc.d/init.d/proftpd
  for i in $(seq 0 6)
  do
    install -dm755 -v $P/etc/rc.d/rc"$i".d
    case $i in
      0|1|2|6)
	ln -sfv ../init.d/proftpd $P/etc/rc.d/rc"$i".d/K28proftpd
	;;
      3|4|5)
	ln -sfv ../init.d/proftpd $P/etc/rc.d/rc"$i".d/S32proftpd
	;;
    esac
  done

  mkdir -p $P/install
  cat <<EOF >> $P/install/initpkg
if [ ! -f /etc/proftpd.conf ]; then
  ( cd /etc ; cp proftpd.conf.dist proftpd.conf )
fi
EOF

################################
#      install tweaks
#  strip binaries, delete locale except ja, compress man, 
#  install docs and patches, compress them and  chown root.root
################################
  install_tweak

  cp -Rv $S/doc/* $docdir/$src/

#############################
#   convert symlink to null file and 
#   add "ln -sf" command into install/doinst.sh
################################
  convert_links

  cd $P
  /sbin/makepkg ../$pkg.$compress <<EOF
y
1
EOF

fi
