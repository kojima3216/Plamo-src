#!/bin/sh
##############################################################
pkgbase='dovecot'
vers="2.3.20"
url="https://${pkgbase}.org/releases/2.3/${pkgbase}-${vers}.tar.gz"
verify="${url}.sig"
arch=`uname -m`
build=B1
src="${pkgbase}-${vers}"
OPT_CONFIG="--disable-static --enable-shared --with-rundir=/run/dovecot
	    --with-mysql --with-sqlite --with-ssl=openssl
	    --without-gssapi --without-lua --without-ldap
	    --docdir=/usr/share/doc/${src}"
DOCS='AUTHORS COPYING COPYING.LGPL COPYING.MIT ChangeLog INSTALL INSTALL.md NEWS README README.md TODO'
patchfiles=''
compress=txz
##############################################################

source /usr/share/plamobuild_functions.sh

# このスクリプトで使う1文字変数の意味
#
# $W : このスクリプトを動かすカレントディレクトリ
# $S : ソースコードのあるディレクトリ(デフォルト: $W/${src})
# $B : ビルド用ディレクトリ(デフォルト: /tmp/build{,32})
# $P : ビルドしたファイルをインストールするディレクトリ（デフォルト: $W/work)


if [ $# -eq 0 ] ; then
  opt_download=0 ; opt_config=1 ; opt_build=1 ; opt_package=1
else
  opt_download=0 ; opt_config=0 ; opt_build=0 ; opt_package=0
  for i in $@ ; do
    case $i in
    download) opt_download=1 ;;
    config) opt_config=1 ;;
    build) opt_build=1 ;;
    package) opt_package=1 ;;
    esac
  done
fi
if [ $opt_download -eq 1 ] ; then
  download_sources
fi

if [ $opt_config -eq 1 ] ; then
  if [ -d $B ] ; then rm -rf $B ; fi ; mkdir -p $B 
######################################################################
#  don't copy sources, so need patch in the src dir
######################################################################
  cd $S
  for patch in $patchfiles ; do
    if [ ! -f .${patch} ]; then
      patch -p1 < $W/$patch
      touch .${patch}
    fi
  done
  # if [ -f autogen.sh ] ; then
  #   sh ./autogen.sh
  # fi

  cd $B
  export PKG_CONFIG_PATH=/usr/${libdir}/pkgconfig:/usr/share/pkgconfig:/opt/kde/${libdir}/pkgconfig
  export CFLAGS="-I/usr/include/tirpc"
  export LDFLAGS='-ltirpc -Wl,--as-needed'
  PANDOC=false \
	$S/configure --prefix=/usr --sysconfdir=/etc --localstatedir=/var --mandir='${prefix}'/share/man ${OPT_CONFIG}
    
  if [ $? != 0 ]; then
    echo "configure error. $0 script stop"
    exit 255
  fi
fi
    
if [ $opt_build -eq 1 ] ; then
  cd $B
  export LDFLAGS='-Wl,--as-needed'
  make -j3
  if [ $? != 0 ]; then
    echo "build error. $0 script stop"
    exit 255
  fi
fi

if [ $opt_package -eq 1 ] ; then
  check_root
  if [ -d $P ] ; then rm -rf $P ; fi ; mkdir -p $P
  cd $B
  export LDFLAGS='-Wl,--as-needed'
  make install DESTDIR=$P

  install -Dm644 -v $W/dovecot.init $P/etc/rc.d/init.d/dovecot
  install -Dm644 -v $W/dovecot.init $docdir/$src/dovecot.init
  for i in $(seq 0 6)
  do
    install -dm755 -v $P/etc/rc.d/rc"$i".d
    case $i in
      0|1|2|6)
        ln -sfv ../init.d/dovecot $P/etc/rc.d/rc"$i".d/K78dovecot
        ;;
      3|4|5)
        ln -sfv ../init.d/dovecot $P/etc/rc.d/rc"$i".d/S27dovecot
        ;;
    esac
  done

  # config files
  mv -v $P/etc/dovecot $P/etc/dovecot.dist
  cp -rv $docdir/$src/example-config/* $P/etc/dovecot.dist/
  sed -i '/^\!include / s/^/#/' $P/etc/dovecot.dist/dovecot.conf
  install -Dm644 -v $W/dovecot.conf.plamo $P/etc/dovecot.dist/local.conf
  install -Dm644 -v $W/dovecot.conf.plamo $docdir/$src/dovecot.conf.plamo

  # pam
  mkdir -pv $P/etc/pam.d
  install -Dm644 -v $W/dovecot.pam $P/etc/pam.d/dovecot
  install -Dm644 -v $W/dovecot.pam $docdir/$src/dovecot.pam

  mkdir -p $P/install
  cat <<"EOF" >> $P/install/initpkg
if ! grep dovecot /etc/group; then
  echo "Add dovecot group"
  groupadd -g 143 dovecot
fi
if ! grep dovenull /etc/group; then
  echo "Add dovenull group"
  groupadd -g 144 dovenull
fi
if ! grep dovecot /etc/passwd; then
  echo "Add dovecot user"
  useradd -c "Dovecot unprivileged user" -d /dev/null -u 42 \
        -g dovecot -s /bin/false dovecot
fi
if ! grep dovenull /etc/passwd; then
  echo "Add dovenull user"
  useradd -c "Dovecot login user" -d /dev/null -u 43 \
        -g dovenull -s /bin/false dovenull
fi
if [ ! -d /etc/dovecot ]; then
  cp -a /etc/dovecot.dist /etc/dovecot
fi
EOF

################################
#      install tweaks
#  strip binaries, delete locale except ja, compress man, 
#  install docs and patches, compress them and  chown root.root
################################
  install_tweak

#############################
#   convert symlink to null file and 
#   add "ln -sf" command into install/doinst.sh
################################
  convert_links

  cd $P
  /sbin/makepkg ../$pkg.$compress <<EOF
y
1
EOF

fi
