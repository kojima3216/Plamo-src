#!/bin/sh
##############################################################
pkgbase='mariadb'
vers='10.6.16'
#url=""https://downloads.mariadb.com/MariaDB/mariadb-${vers}/source/mariadb-${vers}.tar.gz
url="https://mirrors.xtom.jp/mariadb/mariadb-${vers}/source/mariadb-${vers}.tar.gz"
digest=""
verify="${url}.asc"
arch=`uname -m`
build=B2
src="${pkgbase}-${vers}"
# なぜか GSSAPI のリンクでエラーになるので AUTH_GSSAPI は無効化している
OPT_CONFIG=(-DCMAKE_BUILD_TYPE=Release
	-DINSTALL_DOCDIR=share/doc/${src}
	-DINSTALL_DOCREADMEDIR=share/doc/${src}
	-DINSTALL_MANDIR=share/man
	-DINSTALL_MYSQLSHAREDIR=share/mysql
	-DINSTALL_MYSQLTESTDIR=share/mysql/test
	-DINSTALL_PLUGINDIR=lib/mysql/plugin
	-DINSTALL_SBINDIR=sbin
	-DINSTALL_SCRIPTDIR=bin
	-DINSTALL_SQLBENCHDIR=share/mysql/bench
	-DINSTALL_SUPPORTFILESDIR=share/mysql
	-DMYSQL_DATADIR=/srv/mysql
	-DMYSQL_UNIX_ADDR=/run/mysqld/mysqld.sock
	-DWITH_EXTRA_CHARSETS=complex
	-DWITH_EMBEDDED_SERVER=ON
	-DSKIP_TESTS=ON
	-DPLUGIN_AUTH_GSSAPI=NO
	-DTOKUDB_OK=0)
DOCS='COPYING COPYING.thirdparty INSTALL-SOURCE INSTALL-WIN-SOURCE KNOWN_BUGS.txt README.md'
patchfiles=''
addfiles='mariadb.init my.cnf mysql-log-rotate'
compress=tzst
##############################################################

source /usr/share/plamobuild_functions.sh

# このスクリプトで使う1文字変数の意味
#
# $W : このスクリプトを動かすカレントディレクトリ
# $S : ソースコードのあるディレクトリ(デフォルト: $W/${src})
# $B : ビルド用ディレクトリ(デフォルト: /tmp/build{,32})
# $P : ビルドしたファイルをインストールするディレクトリ（デフォルト: $W/work)

B=$W/build

if [ $# -eq 0 ] ; then
  opt_download=0 ; opt_config=1 ; opt_build=1 ; opt_package=1
else
  opt_download=0 ; opt_config=0 ; opt_build=0 ; opt_package=0
  for i in $@ ; do
    case $i in
    download) opt_download=1 ;;
    config) opt_config=1 ;;
    build) opt_build=1 ;;
    package) opt_package=1 ;;
    esac
  done
fi
if [ $opt_download -eq 1 ] ; then
  download_sources
fi

if [ $opt_config -eq 1 ] ; then

  for f in $addfiles $patchfiles
  do
    if [ ! -f $f ]; then
      echo "Required file ($f) is missing."
      exit 255
    fi
  done

  if [ -d $B ] ; then rm -rf $B ; fi ; mkdir -p $B 
######################################################################
#   patch apply to source tree but make at out of source tree
######################################################################
  cd $S
  for patch in $patchfiles ; do
    if [ ! -f .${patch} ]; then
      patch -p1 < $W/$patch
      touch .${patch}
    fi
  done
  cd $B
  export PKG_CONFIG_PATH=/usr/${libdir}/pkgconfig:/usr/share/pkgconfig:/opt/kde/${libdir}/pkgconfig
  export LDFLAGS='-Wl,--as-needed' 
  cmake -DCMAKE_INSTALL_PREFIX:PATH=/usr ${OPT_CONFIG[@]} $S
  
  if [ $? != 0 ]; then
    echo "configure error. $0 script stop"
    exit 255
  fi
fi
    
if [ $opt_build -eq 1 ] ; then
  cd $B
  export LDFLAGS='-Wl,--as-needed'
  make -j1 VERBOSE=1
  if [ $? != 0 ]; then
    echo "build error. $0 script stop"
    exit 255
  fi
fi

if [ $opt_package -eq 1 ] ; then
  check_root
  if [ -d $P ] ; then rm -rf $P ; fi ; mkdir -p $P
  cd $B
  export LDFLAGS='-Wl,--as-needed'
  make install DESTDIR=$P

  install -Dm644 -v $W/mariadb.init $P/etc/rc.d/init.d/mariadb
  install -Dm644 -v $W/mariadb.init $docdir/$src/mariadb.init
  for i in $(seq 0 6)
  do
    install -dm755 -v $P/etc/rc.d/rc"$i".d
    case $i in
      0|1|2|6)
	ln -sfv ../init.d/mariadb $P/etc/rc.d/rc"$i".d/K26mariadb
	;;
      3|4|5)
        ln -sfv ../init.d/mariadb $P/etc/rc.d/rc"$i".d/S34mariadb
	;;
    esac
  done

  install -Dm644 -v $W/my.cnf $P/etc/mysql/my.cnf.dist
  install -Dm644 -v $W/my.cnf $docdir/$src/my.cnf
  install -Dm644 -v $W/mysql-log-rotate $P/etc/logrotate.d/mariadb
  install -Dm644 -v $W/mysql-log-rotate $docdir/$src/mysql-log-rotate
  install -dm755 -o mysql -g mysql -v $P/var/log/mysql

  mkdir -p $P/install
  cat <<EOF >> $P/install/initpkg
if [ ! -f /etc/mysql/my.cnf ]; then
   ( cd /etc/mysql && cp my.cnf.dist my.cnf )
fi
EOF

################################
#      install tweaks
#  strip binaries, delete locale except ja, compress man, 
#  install docs and patches, compress them and  chown root.root
################################
  install_tweak

#############################
#   convert symlink to null file and 
#   add "ln -sf" command into install/doinst.sh
################################
  convert_links

  cd $P
  /sbin/makepkg ../$pkg.$compress <<EOF
y
1
EOF

fi
