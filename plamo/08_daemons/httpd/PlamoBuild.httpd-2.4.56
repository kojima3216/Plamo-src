#!/bin/sh
##############################################################
pkgbase='httpd'
vers="2.4.56"
url="https://archive.apache.org/dist/${pkgbase}/${pkgbase}-${vers}.tar.bz2"
verify="${url}.asc"
#verify="https://downloads.apache.org/httpd/httpd-${vers}.tar.bz2.sha256"
arch=`uname -m`
build=B1
src="${pkgbase}-${vers}"
OPT_CONFIG=(--enable-layout=Plamo-FHS
	    --enable-mpms-shared=all
	    --enable-modules=all
	    --enable-mods-shared=all
	    --mandir=/usr/share/man
	    --with-apr=/usr/bin/apr-1-config
	    --with-apr-util=/usr/bin/apu-1-config)
DOCS='ABOUT_APACHE INSTALL InstallBin.dsp LICENSE README README.cmake README.platforms'
patchfiles='httpdlogrotate_plamo.patch'
compress=tzst
##############################################################

source /usr/share/plamobuild_functions.sh

# このスクリプトで使う1文字変数の意味
#
# $W : このスクリプトを動かすカレントディレクトリ
# $S : ソースコードのあるディレクトリ(デフォルト: $W/${src})
# $B : ビルド用ディレクトリ(デフォルト: /tmp/build{,32})
# $P : ビルドしたファイルをインストールするディレクトリ（デフォルト: $W/work)


if [ $# -eq 0 ] ; then
  opt_download=0 ; opt_config=1 ; opt_build=1 ; opt_package=1
else
  opt_download=0 ; opt_config=0 ; opt_build=0 ; opt_package=0
  for i in $@ ; do
    case $i in
    download) opt_download=1 ;;
    config) opt_config=1 ;;
    build) opt_build=1 ;;
    package) opt_package=1 ;;
    esac
  done
fi
if [ $opt_download -eq 1 ] ; then
  download_sources
fi

if [ $opt_config -eq 1 ] ; then
  if [ -d $B ] ; then rm -rf $B ; fi ; mkdir -p $B 
######################################################################
#  don't copy sources, so need patch in the src dir
######################################################################
  cd $S
  for patch in $patchfiles ; do
    if [ ! -f .${patch} ]; then
      patch -p1 < $W/$patch
      touch .${patch}
    fi
  done
  # if [ -f autogen.sh ] ; then
  #   sh ./autogen.sh
  # fi

  sed -e 's#User daemon#User www#' \
      -e 's#Group daemon#Group apache#' \
      -i docs/conf/httpd.conf.in

  cp -v $W/plamo.layout $S/config.layout

  cd $B
  export PKG_CONFIG_PATH=/usr/${libdir}/pkgconfig:/usr/share/pkgconfig
  export LDFLAGS='-Wl,--as-needed' 
  $S/configure ${OPT_CONFIG[@]}
    
  if [ $? != 0 ]; then
    echo "configure error. $0 script stop"
    exit 255
  fi
fi
    
if [ $opt_build -eq 1 ] ; then
  cd $B
  export LDFLAGS='-Wl,--as-needed'
  make -j3
  if [ $? != 0 ]; then
    echo "build error. $0 script stop"
    exit 255
  fi
fi

if [ $opt_package -eq 1 ] ; then
  check_root
  if [ -d $P ] ; then rm -rf $P ; fi ; mkdir -p $P
  cd $B
  export LDFLAGS='-Wl,--as-needed'
  make install DESTDIR=$P

  # for backupping config files 
  ( cd $P/etc/httpd ; mv httpd.conf httpd.conf.dist )
  ( cd $P/etc/httpd ; mv extra extra.dist )
  for d in htdocs icons error cgi-bin
  do
    ( cd $P/srv/httpd ; mv $d $d.dist )
  done

  # logrotate
  install -Dm644 -v $S/build/rpm/httpd.logrotate $P/etc/logrotate.d/httpd.logrotate

  # init script
  install -Dm644 -v $W/httpd.init $P/etc/rc.d/init.d/httpd
  for i in $(seq 0 6)
  do
    install -dm755 -v $P/etc/rc.d/rc${i}.d/
    case $i in
      0|1|2|6)
	ln -sfv ../init.d/httpd $P/etc/rc.d/rc${i}.d/K28httpd
	;;
      3|4|5)
	ln -sfv ../init.d/httpd $P/etc/rc.d/rc${i}.d/S32httpd
	;;
    esac
  done

  # plamo original to doc
  install -Dm644 -v $W/httpd.init $docdir/$src/httpd.init
  install -Dm644 -v $W/plamo.layout $docdir/$src/plamo.layout

  mkdir -p $P/install
  cat <<"EOF" >> $P/install/initpkg
MYHOST=$(cat /etc/HOSTNAME)
sed -i -e "s/^#ServerName.*$/ServerName $MYHOST/" /etc/httpd/httpd.conf.dist

if [ ! -f /etc/httpd/httpd.conf ]; then
  ( cd /etc/httpd ; cp httpd.conf.dist httpd.conf )
fi

if [ ! -d /etc/httpd/extra ]; then
  ( cd /etc/httpd ; cp -rp extra.dist extra )
fi

for d in htdocs icons error cgi-bin
do
  if [ ! -d /srv/httpd/$d ]; then
    ( cd /srv/httpd ; mv $d.dist $d )
  fi
done

EOF

################################
#      install tweaks
#  strip binaries, delete locale except ja, compress man, 
#  install docs and patches, compress them and  chown root.root
################################
  install_tweak

#############################
#   convert symlink to null file and 
#   add "ln -sf" command into install/doinst.sh
################################
  convert_links

  cd $P
  /sbin/makepkg ../$pkg.$compress <<EOF
y
1
EOF

fi
