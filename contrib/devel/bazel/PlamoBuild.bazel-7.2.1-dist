#!/bin/sh
##############################################################
pkgbase="bazel"
vers="7.2.1"
url="https://github.com/bazelbuild/bazel/releases/download/7.2.1/bazel-7.2.1-dist.zip"
verify=""
digest=""
arch=`uname -m`
build=B1
src="bazel-7.2.1-dist"
OPT_CONFIG="--disable-static --enable-shared"
DOCS="AUTHORS CHANGELOG.md LICENSE README.md maven_install.json requirements.txt"
patchfiles=""
# specifies files that are not in source archive and patchfiles
addfiles=""
compress=tzst
##############################################################

source /usr/share/plamobuild_functions.sh

# このスクリプトで使う1文字変数の意味
#
# $W : このスクリプトを動かすカレントディレクトリ
# $S : ソースコードのあるディレクトリ(デフォルト: $W/${src})
# $B : ビルド用ディレクトリ(デフォルト: /tmp/build)
# $P : ビルドしたファイルをインストールするディレクトリ（デフォルト: $W/work)

if [ $# -eq 0 ] ; then
  opt_download=0 ; opt_config=1 ; opt_build=1 ; opt_package=1
else
  opt_download=0 ; opt_config=0 ; opt_build=0 ; opt_package=0
  for i in $@ ; do
    case $i in
    download) opt_download=1 ;;
    config) opt_config=1 ;;
    build) opt_build=1 ;;
    package) opt_package=1 ;;
    esac
  done
fi
if [ $opt_download -eq 1 ] ; then
    download_sources
fi

if [ $opt_config -eq 1 ] ; then

    for f in $addfiles $patchfiles
    do
        if [ ! -f $f ]; then
            echo "Required file ($f) is missing."
            exit 255
        fi
    done

######################################################################
#  source copy build. patch apply in build dir
######################################################################
    if [ -d $B ] ; then rm -rf $B ; fi ;  cp -a $S $B  
    cd $B
    for patch in $patchfiles ; do
       patch -p1 < $W/$patch
    done
    # if [ -f autogen.sh ] ; then
    #   sh ./autogen.sh
    # fi
fi

if [ $opt_build -eq 1 ] ; then
    cd $B 
    export LDFLAGS='-Wl,--as-needed'
    export JAVA_HOME=/usr/java/jdk-22.0.2
    export PATH=$JAVA_HOME/bin:$PATH

    EMBED_LABEL=$vers EXTRA_BAZEL_ARGS="--tool_java_runtime_version=local_jdk" bash ./compile.sh
    ./output/bazel build scripts:bazel-complete.bash
    cd output
    ./bazel shutdown

    if [ $? != 0 ]; then
        echo "build error. $0 script stop"
        exit 255
    fi
fi

if [ $opt_package -eq 1 ] ; then
  check_root
  if [ -d $P ] ; then rm -rf $P ; fi ; mkdir -p $P
  cd $B

  install -Dm755 "$B/scripts/packages/bazel.sh" "$P/usr/bin/bazel"
  install -Dm644 "$B/bazel-bin/scripts/bazel-complete.bash" "$P/usr/share/bash-completion/completions/bazel"
  install -Dm644 "$B/scripts/zsh_completion/_bazel" "$P/usr/share/zsh/site-functions/_bazel"
  mkdir -p "$P/usr/share/bazel"
  for d in examples third_party tools; do
    cp -r "$B/${d}" "$P/usr/share/bazel/"
  done

################################
#      install tweaks
#  strip binaries, delete locale except ja, compress man,
#  install docs and patches, compress them and  chown root.root
################################
  install_tweak
  install -Dm755 "$B/output/bazel" "$P/usr/bin/bazel-real"

#############################
#   convert symlink to null file and
#   add "ln -sf" command into install/doinst.sh
################################
  convert_links

  cd $P
  /sbin/makepkg ../$pkg.$compress <<EOF
y
1
EOF

fi
