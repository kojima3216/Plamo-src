#!/bin/sh
##############################################################
pkgbase="incus"
vers="0.3"
url="https://linuxcontainers.org/downloads/incus/incus-${vers}.tar.xz"
verify="${url}.asc"
digest=""
arch=`uname -m`
build=B1
src="incus-${vers}"
OPT_CONFIG="--disable-static --enable-shared"
DOCS="AUTHORS COPYING README.md"
patchfiles=""
# specifies files that are not in source archive and patchfiles
addfiles="incus.init"
compress=tzst
##############################################################

source /usr/share/plamobuild_functions.sh

# このスクリプトで使う1文字変数の意味
#
# $W : このスクリプトを動かすカレントディレクトリ
# $S : ソースコードのあるディレクトリ(デフォルト: $W/${src})
# $B : ビルド用ディレクトリ(デフォルト: /tmp/build)
# $P : ビルドしたファイルをインストールするディレクトリ（デフォルト: $W/work)

if [ $# -eq 0 ] ; then
  opt_download=0 ; opt_config=1 ; opt_build=1 ; opt_package=1
else
  opt_download=0 ; opt_config=0 ; opt_build=0 ; opt_package=0
  for i in $@ ; do
    case $i in
    download) opt_download=1 ;;
    config) opt_config=1 ;;
    build) opt_build=1 ;;
    package) opt_package=1 ;;
    esac
  done
fi
if [ $opt_download -eq 1 ] ; then
    download_sources
fi

if [ $opt_config -eq 1 ] ; then

    for f in $addfiles $patchfiles
    do
        if [ ! -f $f ]; then
            echo "Required file ($f) is missing."
            exit 255
        fi
    done

######################################################################
#  source copy build. patch apply in build dir
######################################################################
    if [ -d $B ] ; then rm -rf $B ; fi ;  cp -a $S $B  
    cd $B
    for patch in $patchfiles ; do
       patch -p1 < $W/$patch
    done

fi

if [ $opt_build -eq 1 ] ; then
    cd $B 

    mkdir -pv $B/go
    export GOPATH=$B/go

    export CGO_CFLAGS="-I/tmp/build/vendor/raft/include/ -I/tmp/build/vendor/cowsql/include/"
    export CGO_LDFLAGS="-L/tmp/build/vendor/raft/.libs -L/tmp/build/vendor/cowsql/.libs/"
    export LD_LIBRARY_PATH="/tmp/build/vendor/raft/.libs/:/tmp/build/vendor/cowsql/.libs/"
    export CGO_LDFLAGS_ALLOW="(-Wl,-wrap,pthread_create)|(-Wl,-z,now)"
    
    make deps
    if [ $? -ne 0 ]; then
	echo "make deps error"
	exit 1
    fi
    make
    if [ $? -ne 0 ]; then
	echo "make error"
	exit 1
    fi
    make po/ja.mo
    if [ $? -ne 0 ]; then
	echo "make ja.mo error"
	exit 1
    fi
fi

if [ $opt_package -eq 1 ] ; then
  check_root
  if [ -d $P ] ; then rm -rf $P ; fi ; mkdir -p $P
  cd $B

  for f in $(ls go/bin/)
  do
      install -Dm755 -v $B/go/bin/$f $P/usr/bin/$f
  done

  # libraries
  mkdir -pv $P/usr/lib/incus
  cp -av vendor/cowsql/.libs/libcowsql.so* $P/usr/lib/incus/
  cp -av vendor/raft/.libs/libraft.so* $P/usr/lib/incus/

  # message
  install -Dm644 -v po/ja.mo $P/usr/share/locale/ja/LC_MESSAGES/incus.mo

  # directories
  install -dv $P/var/log/incus
  install -dv $P/var/lib/incus

  # init file
  install -D -v -m755 $W/incus.init $P/etc/rc.d/init.d/incus

  # initpkg
  mkdir -pv $P/install
  cat <<EOF >> $P/install/initpkg
/usr/sbin/groupadd -f -r incus

if [ -x /usr/bin/xorrisofs ]; then
  ( cd /usr/bin ; ln -sf xorrisofs mkisofs )
fi
EOF

  for i in $(seq 0 6)
  do
      install -dm755 -v $P/etc/rc.d/rc"$i".d
      case $i in
	  0|1|2|6)
	      ln -sfv ../init.d/incus $P/etc/rc.d/rc"$i".d/K01incus
	      ;;
	  3|4|5)
	      ln -sfv ../init.d/incus $P/etc/rc.d/rc"$i".d/S99incus
	      ;;
      esac
  done

################################
#      install tweaks
#  strip binaries, delete locale except ja, compress man,
#  install docs and patches, compress them and  chown root.root
################################
  install_tweak

#############################
#   convert symlink to null file and
#   add "ln -sf" command into install/doinst.sh
################################
  convert_links

  cd $P
  /sbin/makepkg ../$pkg.$compress <<EOF
y
1
EOF

fi
