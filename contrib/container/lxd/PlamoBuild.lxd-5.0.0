#!/bin/sh
##############################################################
pkgbase="lxd"
vers="5.0.0"
url="https://linuxcontainers.org/downloads/lxd/lxd-${vers}.tar.gz"
verify="${url}.asc"
arch=`uname -m`
build=B1
src="lxd-${vers}"
OPT_CONFIG='--disable-static --enable-shared'
DOCS='AUTHORS COPYING'
#patchfiles="dqlite.patch"
patchfiles=""
compress=tzst
##############################################################

#source /usr/lib/setup/plamobuild_functions.sh
source /usr/share/plamobuild_functions.sh

if [ $# -eq 0 ] ; then
  opt_download=0 ; opt_config=1 ; opt_build=1 ; opt_package=1
else
  opt_download=0 ; opt_config=0 ; opt_build=0 ; opt_package=0
  for i in $@ ; do
    case $i in
    download) opt_download=1 ;;
    config) opt_config=1 ;;
    build) opt_build=1 ;;
    package) opt_package=1 ;;
    esac
  done
fi
if [ $opt_download -eq 1 ] ; then
    download_sources
fi

if [ $opt_config -eq 1 ] ; then
    if [ -d $B ] ; then rm -rf $B ; fi ; cp -a $S $B
######################################################################
#  copy sources into build directory, patch and make in the build dir
######################################################################

    cd $B
    for patch in $patchfiles ; do
        patch -p1 < $W/$patch
    done

    if [ -f $W/linux-containers-lxd-ja.po ]; then
        cp -v $W/linux-containers-lxd-ja.po $B/po/ja.po
    fi

fi

if [ $opt_build -eq 1 ] ; then

    cd $B
    mkdir -v $B/go
    export GOPATH=$B/go

    export CGO_CFLAGS="-I$B/vendor/raft/include/ -I$B/vendor/dqlite/include/"
    export CGO_LDFLAGS="-L$B/vendor/raft/.libs -L$B/vendor/dqlite/.libs/"
    export LD_LIBRARY_PATH="$B/vendor/raft/.libs/:$B/vendor/dqlite/.libs/"
    export CGO_LDFLAGS_ALLOW="(-Wl,-wrap,pthread_create)|(-Wl,-z,now)"
    export GOFLAGS="-buildmode=pie -trimpath"

    make deps
    make
    if [ $? != 0 ]; then
        echo "build error. $0 script stop"
        exit 255
    fi
    #make build-mo
    make po/ja.mo
    if [ $? != 0 ]; then
        echo "build-mo error. $0 script stop"
        exit 255
    fi
fi

if [ $opt_package -eq 1 ] ; then

  check_root
    
  if [ -d $P ] ; then rm -rf $P ; fi ; mkdir -p $P
  cd $B

  # bin
  for f in $(ls go/bin/)
  do
      install -D -m755 -v $B/go/bin/$f $P/usr/bin/$f
  done

  # dep libs
  mkdir -pv $P/usr/lib/lxd
  cp -av vendor/dqlite/.libs/libdqlite.so* $P/usr/lib/lxd/
  cp -av vendor/raft/.libs/libraft.so* $P/usr/lib/lxd/

  # message
  install -D -m644 src/github.com/lxc/lxd/po/ja.mo $P/usr/share/locale/ja/LC_MESSAGES/lxd.mo

  # directory
  install -d $P/var/log/lxd
  install -d $P/var/lib/lxd

  # init file
  install -D -m755 $W/lxd.init $P/etc/rc.d/init.d/lxd

  #
  install -D -m644 src/github.com/lxc/lxd/scripts/bash/lxd-client \
          $P/usr/share/bash-completion/completions/lxc

  # initpkg
  mkdir -p $P/install
  cat > $P/install/initpkg <<EOF
touch /etc/subuid /etc/subgid
groupadd -f -r lxd
usermod -v 100000-165536 -w 100000-165536 root

if [ -x /usr/bin/xorrisofs ]; then
  ( cd /usr/bin ; ln -sf xorrisofs mkisofs )
fi
EOF

  for i in $(seq 0 6)
  do
      install -dm755 -v $P/etc/rc.d/rc"$i".d
      case $i in
	  0|1|2|6)
	      ln -sfv ../init.d/lxd $P/etc/rc.d/rc"$i".d/K01lxd
	      ;;
	  3|4|5)
	      ln -sfv ../init.d/lxd $P/etc/rc.d/rc"$i".d/S99lxd
	      ;;
      esac
  done

  install -D -dm755 -v $docdir/$src

  cd $W

################################
#      install tweaks
#  strip binaries, delete locale except ja, compress man, 
#  install docs and patches, compress them and  chown root.root
################################
  install_tweak

  cd $P
  /sbin/makepkg ../$pkg.$compress <<EOF
y
1
EOF

fi
